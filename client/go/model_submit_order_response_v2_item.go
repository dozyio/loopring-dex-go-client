/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// SubmitOrderResponseV2Item model.SubmitOrderResponseV2Item.description
type SubmitOrderResponseV2Item struct {
	// field.SubmitOrderResponseV2Item.orderHash
	OrderHash string `json:"orderHash"`
	// field.SubmitOrderResponseV2Item.status
	Status string `json:"status"`
	// field.SubmitOrderResponseV2Item.isIdempotent
	IsIdempotent bool `json:"isIdempotent"`
}

// NewSubmitOrderResponseV2Item instantiates a new SubmitOrderResponseV2Item object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitOrderResponseV2Item(orderHash string, status string, isIdempotent bool) *SubmitOrderResponseV2Item {
	this := SubmitOrderResponseV2Item{}
	this.OrderHash = orderHash
	this.Status = status
	this.IsIdempotent = isIdempotent
	return &this
}

// NewSubmitOrderResponseV2ItemWithDefaults instantiates a new SubmitOrderResponseV2Item object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitOrderResponseV2ItemWithDefaults() *SubmitOrderResponseV2Item {
	this := SubmitOrderResponseV2Item{}
	return &this
}

// GetOrderHash returns the OrderHash field value
func (o *SubmitOrderResponseV2Item) GetOrderHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderHash
}

// GetOrderHashOk returns a tuple with the OrderHash field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderResponseV2Item) GetOrderHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderHash, true
}

// SetOrderHash sets field value
func (o *SubmitOrderResponseV2Item) SetOrderHash(v string) {
	o.OrderHash = v
}

// GetStatus returns the Status field value
func (o *SubmitOrderResponseV2Item) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderResponseV2Item) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SubmitOrderResponseV2Item) SetStatus(v string) {
	o.Status = v
}

// GetIsIdempotent returns the IsIdempotent field value
func (o *SubmitOrderResponseV2Item) GetIsIdempotent() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsIdempotent
}

// GetIsIdempotentOk returns a tuple with the IsIdempotent field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderResponseV2Item) GetIsIdempotentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsIdempotent, true
}

// SetIsIdempotent sets field value
func (o *SubmitOrderResponseV2Item) SetIsIdempotent(v bool) {
	o.IsIdempotent = v
}

func (o SubmitOrderResponseV2Item) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["orderHash"] = o.OrderHash
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["isIdempotent"] = o.IsIdempotent
	}
	return json.Marshal(toSerialize)
}

type NullableSubmitOrderResponseV2Item struct {
	value *SubmitOrderResponseV2Item
	isSet bool
}

func (v NullableSubmitOrderResponseV2Item) Get() *SubmitOrderResponseV2Item {
	return v.value
}

func (v *NullableSubmitOrderResponseV2Item) Set(val *SubmitOrderResponseV2Item) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitOrderResponseV2Item) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitOrderResponseV2Item) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitOrderResponseV2Item(val *SubmitOrderResponseV2Item) *NullableSubmitOrderResponseV2Item {
	return &NullableSubmitOrderResponseV2Item{value: val, isSet: true}
}

func (v NullableSubmitOrderResponseV2Item) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitOrderResponseV2Item) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
