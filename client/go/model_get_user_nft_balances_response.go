/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetUserNftBalancesResponse Users NFT token balance response
type GetUserNftBalancesResponse struct {
	// field.totalNum.description
	TotalNum int64 `json:"totalNum"`
	// NFT tokens balance info
	Data []CombinedNftBalance `json:"data"`
}

// NewGetUserNftBalancesResponse instantiates a new GetUserNftBalancesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserNftBalancesResponse(totalNum int64, data []CombinedNftBalance) *GetUserNftBalancesResponse {
	this := GetUserNftBalancesResponse{}
	this.TotalNum = totalNum
	this.Data = data
	return &this
}

// NewGetUserNftBalancesResponseWithDefaults instantiates a new GetUserNftBalancesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserNftBalancesResponseWithDefaults() *GetUserNftBalancesResponse {
	this := GetUserNftBalancesResponse{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *GetUserNftBalancesResponse) GetTotalNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *GetUserNftBalancesResponse) GetTotalNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *GetUserNftBalancesResponse) SetTotalNum(v int64) {
	o.TotalNum = v
}

// GetData returns the Data field value
func (o *GetUserNftBalancesResponse) GetData() []CombinedNftBalance {
	if o == nil {
		var ret []CombinedNftBalance
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetUserNftBalancesResponse) GetDataOk() ([]CombinedNftBalance, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *GetUserNftBalancesResponse) SetData(v []CombinedNftBalance) {
	o.Data = v
}

func (o GetUserNftBalancesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetUserNftBalancesResponse struct {
	value *GetUserNftBalancesResponse
	isSet bool
}

func (v NullableGetUserNftBalancesResponse) Get() *GetUserNftBalancesResponse {
	return v.value
}

func (v *NullableGetUserNftBalancesResponse) Set(val *GetUserNftBalancesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserNftBalancesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserNftBalancesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserNftBalancesResponse(val *GetUserNftBalancesResponse) *NullableGetUserNftBalancesResponse {
	return &NullableGetUserNftBalancesResponse{value: val, isSet: true}
}

func (v NullableGetUserNftBalancesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserNftBalancesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
