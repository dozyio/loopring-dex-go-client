/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// SubmitOrderRequest model.SubmitOrderRequest.description
type SubmitOrderRequest struct {
	// field.SubmitOrderRequest.exchange
	Exchange string `json:"exchange"`
	// field.SubmitOrderRequest.storageId
	StorageId int32 `json:"storageId"`
	// field.SubmitOrderRequest.accountId
	AccountId int64 `json:"accountId"`
	// field.SubmitOrderRequest.tokenSId
	TokenSId int32 `json:"tokenSId"`
	// field.SubmitOrderRequest.tokenBId
	TokenBId int32 `json:"tokenBId"`
	// field.SubmitOrderRequest.amountS
	AmountS string `json:"amountS"`
	// field.SubmitOrderRequest.amountB
	AmountB string `json:"amountB"`
	// field.SubmitOrderRequest.allOrNone
	AllOrNone *string `json:"allOrNone,omitempty"`
	// field.SubmitOrderRequest.fillAmountBOrS
	FillAmountBOrS string `json:"fillAmountBOrS"`
	// field.SubmitOrderRequest.validUntil
	ValidUntil int64 `json:"validUntil"`
	// field.SubmitOrderRequest.maxFeeBips
	MaxFeeBips int32 `json:"maxFeeBips"`
	// field.SubmitOrderRequest.eddsaSig
	EddsaSig string `json:"eddsaSig"`
	// field.SubmitOrderRequest.clientOrderId
	ClientOrderId *string `json:"clientOrderId,omitempty"`
	// field.SubmitOrderRequest.affiliate
	Affiliate *string `json:"affiliate,omitempty"`
	// field.SubmitOrderRequest.orderType
	OrderType *string `json:"orderType,omitempty"`
	// field.SubmitOrderRequest.tradeChannel
	TradeChannel *string `json:"tradeChannel,omitempty"`
	// field.SubmitOrderRequest.taker
	Taker *string `json:"taker,omitempty"`
	// field.SubmitOrderRequest.taker
	PoolAddress *string `json:"poolAddress,omitempty"`
}

// NewSubmitOrderRequest instantiates a new SubmitOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitOrderRequest(exchange string, storageId int32, accountId int64, tokenSId int32, tokenBId int32, amountS string, amountB string, fillAmountBOrS string, validUntil int64, maxFeeBips int32, eddsaSig string) *SubmitOrderRequest {
	this := SubmitOrderRequest{}
	this.Exchange = exchange
	this.StorageId = storageId
	this.AccountId = accountId
	this.TokenSId = tokenSId
	this.TokenBId = tokenBId
	this.AmountS = amountS
	this.AmountB = amountB
	this.FillAmountBOrS = fillAmountBOrS
	this.ValidUntil = validUntil
	this.MaxFeeBips = maxFeeBips
	this.EddsaSig = eddsaSig
	return &this
}

// NewSubmitOrderRequestWithDefaults instantiates a new SubmitOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitOrderRequestWithDefaults() *SubmitOrderRequest {
	this := SubmitOrderRequest{}
	return &this
}

// GetExchange returns the Exchange field value
func (o *SubmitOrderRequest) GetExchange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetExchangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Exchange, true
}

// SetExchange sets field value
func (o *SubmitOrderRequest) SetExchange(v string) {
	o.Exchange = v
}

// GetStorageId returns the StorageId field value
func (o *SubmitOrderRequest) GetStorageId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StorageId
}

// GetStorageIdOk returns a tuple with the StorageId field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetStorageIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageId, true
}

// SetStorageId sets field value
func (o *SubmitOrderRequest) SetStorageId(v int32) {
	o.StorageId = v
}

// GetAccountId returns the AccountId field value
func (o *SubmitOrderRequest) GetAccountId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetAccountIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SubmitOrderRequest) SetAccountId(v int64) {
	o.AccountId = v
}

// GetTokenSId returns the TokenSId field value
func (o *SubmitOrderRequest) GetTokenSId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TokenSId
}

// GetTokenSIdOk returns a tuple with the TokenSId field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetTokenSIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenSId, true
}

// SetTokenSId sets field value
func (o *SubmitOrderRequest) SetTokenSId(v int32) {
	o.TokenSId = v
}

// GetTokenBId returns the TokenBId field value
func (o *SubmitOrderRequest) GetTokenBId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TokenBId
}

// GetTokenBIdOk returns a tuple with the TokenBId field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetTokenBIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenBId, true
}

// SetTokenBId sets field value
func (o *SubmitOrderRequest) SetTokenBId(v int32) {
	o.TokenBId = v
}

// GetAmountS returns the AmountS field value
func (o *SubmitOrderRequest) GetAmountS() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmountS
}

// GetAmountSOk returns a tuple with the AmountS field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetAmountSOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountS, true
}

// SetAmountS sets field value
func (o *SubmitOrderRequest) SetAmountS(v string) {
	o.AmountS = v
}

// GetAmountB returns the AmountB field value
func (o *SubmitOrderRequest) GetAmountB() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmountB
}

// GetAmountBOk returns a tuple with the AmountB field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetAmountBOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountB, true
}

// SetAmountB sets field value
func (o *SubmitOrderRequest) SetAmountB(v string) {
	o.AmountB = v
}

// GetAllOrNone returns the AllOrNone field value if set, zero value otherwise.
func (o *SubmitOrderRequest) GetAllOrNone() string {
	if o == nil || o.AllOrNone == nil {
		var ret string
		return ret
	}
	return *o.AllOrNone
}

// GetAllOrNoneOk returns a tuple with the AllOrNone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetAllOrNoneOk() (*string, bool) {
	if o == nil || o.AllOrNone == nil {
		return nil, false
	}
	return o.AllOrNone, true
}

// HasAllOrNone returns a boolean if a field has been set.
func (o *SubmitOrderRequest) HasAllOrNone() bool {
	if o != nil && o.AllOrNone != nil {
		return true
	}

	return false
}

// SetAllOrNone gets a reference to the given string and assigns it to the AllOrNone field.
func (o *SubmitOrderRequest) SetAllOrNone(v string) {
	o.AllOrNone = &v
}

// GetFillAmountBOrS returns the FillAmountBOrS field value
func (o *SubmitOrderRequest) GetFillAmountBOrS() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FillAmountBOrS
}

// GetFillAmountBOrSOk returns a tuple with the FillAmountBOrS field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetFillAmountBOrSOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FillAmountBOrS, true
}

// SetFillAmountBOrS sets field value
func (o *SubmitOrderRequest) SetFillAmountBOrS(v string) {
	o.FillAmountBOrS = v
}

// GetValidUntil returns the ValidUntil field value
func (o *SubmitOrderRequest) GetValidUntil() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetValidUntilOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidUntil, true
}

// SetValidUntil sets field value
func (o *SubmitOrderRequest) SetValidUntil(v int64) {
	o.ValidUntil = v
}

// GetMaxFeeBips returns the MaxFeeBips field value
func (o *SubmitOrderRequest) GetMaxFeeBips() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxFeeBips
}

// GetMaxFeeBipsOk returns a tuple with the MaxFeeBips field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetMaxFeeBipsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFeeBips, true
}

// SetMaxFeeBips sets field value
func (o *SubmitOrderRequest) SetMaxFeeBips(v int32) {
	o.MaxFeeBips = v
}

// GetEddsaSig returns the EddsaSig field value
func (o *SubmitOrderRequest) GetEddsaSig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EddsaSig
}

// GetEddsaSigOk returns a tuple with the EddsaSig field value
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetEddsaSigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EddsaSig, true
}

// SetEddsaSig sets field value
func (o *SubmitOrderRequest) SetEddsaSig(v string) {
	o.EddsaSig = v
}

// GetClientOrderId returns the ClientOrderId field value if set, zero value otherwise.
func (o *SubmitOrderRequest) GetClientOrderId() string {
	if o == nil || o.ClientOrderId == nil {
		var ret string
		return ret
	}
	return *o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetClientOrderIdOk() (*string, bool) {
	if o == nil || o.ClientOrderId == nil {
		return nil, false
	}
	return o.ClientOrderId, true
}

// HasClientOrderId returns a boolean if a field has been set.
func (o *SubmitOrderRequest) HasClientOrderId() bool {
	if o != nil && o.ClientOrderId != nil {
		return true
	}

	return false
}

// SetClientOrderId gets a reference to the given string and assigns it to the ClientOrderId field.
func (o *SubmitOrderRequest) SetClientOrderId(v string) {
	o.ClientOrderId = &v
}

// GetAffiliate returns the Affiliate field value if set, zero value otherwise.
func (o *SubmitOrderRequest) GetAffiliate() string {
	if o == nil || o.Affiliate == nil {
		var ret string
		return ret
	}
	return *o.Affiliate
}

// GetAffiliateOk returns a tuple with the Affiliate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetAffiliateOk() (*string, bool) {
	if o == nil || o.Affiliate == nil {
		return nil, false
	}
	return o.Affiliate, true
}

// HasAffiliate returns a boolean if a field has been set.
func (o *SubmitOrderRequest) HasAffiliate() bool {
	if o != nil && o.Affiliate != nil {
		return true
	}

	return false
}

// SetAffiliate gets a reference to the given string and assigns it to the Affiliate field.
func (o *SubmitOrderRequest) SetAffiliate(v string) {
	o.Affiliate = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *SubmitOrderRequest) GetOrderType() string {
	if o == nil || o.OrderType == nil {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetOrderTypeOk() (*string, bool) {
	if o == nil || o.OrderType == nil {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *SubmitOrderRequest) HasOrderType() bool {
	if o != nil && o.OrderType != nil {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *SubmitOrderRequest) SetOrderType(v string) {
	o.OrderType = &v
}

// GetTradeChannel returns the TradeChannel field value if set, zero value otherwise.
func (o *SubmitOrderRequest) GetTradeChannel() string {
	if o == nil || o.TradeChannel == nil {
		var ret string
		return ret
	}
	return *o.TradeChannel
}

// GetTradeChannelOk returns a tuple with the TradeChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetTradeChannelOk() (*string, bool) {
	if o == nil || o.TradeChannel == nil {
		return nil, false
	}
	return o.TradeChannel, true
}

// HasTradeChannel returns a boolean if a field has been set.
func (o *SubmitOrderRequest) HasTradeChannel() bool {
	if o != nil && o.TradeChannel != nil {
		return true
	}

	return false
}

// SetTradeChannel gets a reference to the given string and assigns it to the TradeChannel field.
func (o *SubmitOrderRequest) SetTradeChannel(v string) {
	o.TradeChannel = &v
}

// GetTaker returns the Taker field value if set, zero value otherwise.
func (o *SubmitOrderRequest) GetTaker() string {
	if o == nil || o.Taker == nil {
		var ret string
		return ret
	}
	return *o.Taker
}

// GetTakerOk returns a tuple with the Taker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetTakerOk() (*string, bool) {
	if o == nil || o.Taker == nil {
		return nil, false
	}
	return o.Taker, true
}

// HasTaker returns a boolean if a field has been set.
func (o *SubmitOrderRequest) HasTaker() bool {
	if o != nil && o.Taker != nil {
		return true
	}

	return false
}

// SetTaker gets a reference to the given string and assigns it to the Taker field.
func (o *SubmitOrderRequest) SetTaker(v string) {
	o.Taker = &v
}

// GetPoolAddress returns the PoolAddress field value if set, zero value otherwise.
func (o *SubmitOrderRequest) GetPoolAddress() string {
	if o == nil || o.PoolAddress == nil {
		var ret string
		return ret
	}
	return *o.PoolAddress
}

// GetPoolAddressOk returns a tuple with the PoolAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitOrderRequest) GetPoolAddressOk() (*string, bool) {
	if o == nil || o.PoolAddress == nil {
		return nil, false
	}
	return o.PoolAddress, true
}

// HasPoolAddress returns a boolean if a field has been set.
func (o *SubmitOrderRequest) HasPoolAddress() bool {
	if o != nil && o.PoolAddress != nil {
		return true
	}

	return false
}

// SetPoolAddress gets a reference to the given string and assigns it to the PoolAddress field.
func (o *SubmitOrderRequest) SetPoolAddress(v string) {
	o.PoolAddress = &v
}

func (o SubmitOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["exchange"] = o.Exchange
	}
	if true {
		toSerialize["storageId"] = o.StorageId
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["tokenSId"] = o.TokenSId
	}
	if true {
		toSerialize["tokenBId"] = o.TokenBId
	}
	if true {
		toSerialize["amountS"] = o.AmountS
	}
	if true {
		toSerialize["amountB"] = o.AmountB
	}
	if o.AllOrNone != nil {
		toSerialize["allOrNone"] = o.AllOrNone
	}
	if true {
		toSerialize["fillAmountBOrS"] = o.FillAmountBOrS
	}
	if true {
		toSerialize["validUntil"] = o.ValidUntil
	}
	if true {
		toSerialize["maxFeeBips"] = o.MaxFeeBips
	}
	if true {
		toSerialize["eddsaSig"] = o.EddsaSig
	}
	if o.ClientOrderId != nil {
		toSerialize["clientOrderId"] = o.ClientOrderId
	}
	if o.Affiliate != nil {
		toSerialize["affiliate"] = o.Affiliate
	}
	if o.OrderType != nil {
		toSerialize["orderType"] = o.OrderType
	}
	if o.TradeChannel != nil {
		toSerialize["tradeChannel"] = o.TradeChannel
	}
	if o.Taker != nil {
		toSerialize["taker"] = o.Taker
	}
	if o.PoolAddress != nil {
		toSerialize["poolAddress"] = o.PoolAddress
	}
	return json.Marshal(toSerialize)
}

type NullableSubmitOrderRequest struct {
	value *SubmitOrderRequest
	isSet bool
}

func (v NullableSubmitOrderRequest) Get() *SubmitOrderRequest {
	return v.value
}

func (v *NullableSubmitOrderRequest) Set(val *SubmitOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitOrderRequest(val *SubmitOrderRequest) *NullableSubmitOrderRequest {
	return &NullableSubmitOrderRequest{value: val, isSet: true}
}

func (v NullableSubmitOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
