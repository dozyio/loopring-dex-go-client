/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetUserNftOrderRatesAmountsResponse Get NFT market minimum order amount & user fee rate, also returns the trade settlement costs.
type GetUserNftOrderRatesAmountsResponse struct {
	// field.NftFeeRate.nftTokenAddress
	NftTokenAddress string `json:"nftTokenAddress"`
	// field.NftFeeRate.rate
	FeeRate int32 `json:"feeRate"`
	// Amounts
	Amounts []FeeTokenAmount `json:"amounts"`
	// field.GetUserNftFeeRatesResponse.gasPrice
	GasPrice string `json:"gasPrice"`
	// Cached price data overdue time
	CacheOverdueAt int64 `json:"cacheOverdueAt"`
}

// NewGetUserNftOrderRatesAmountsResponse instantiates a new GetUserNftOrderRatesAmountsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserNftOrderRatesAmountsResponse(nftTokenAddress string, feeRate int32, amounts []FeeTokenAmount, gasPrice string, cacheOverdueAt int64) *GetUserNftOrderRatesAmountsResponse {
	this := GetUserNftOrderRatesAmountsResponse{}
	this.NftTokenAddress = nftTokenAddress
	this.FeeRate = feeRate
	this.Amounts = amounts
	this.GasPrice = gasPrice
	this.CacheOverdueAt = cacheOverdueAt
	return &this
}

// NewGetUserNftOrderRatesAmountsResponseWithDefaults instantiates a new GetUserNftOrderRatesAmountsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserNftOrderRatesAmountsResponseWithDefaults() *GetUserNftOrderRatesAmountsResponse {
	this := GetUserNftOrderRatesAmountsResponse{}
	return &this
}

// GetNftTokenAddress returns the NftTokenAddress field value
func (o *GetUserNftOrderRatesAmountsResponse) GetNftTokenAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NftTokenAddress
}

// GetNftTokenAddressOk returns a tuple with the NftTokenAddress field value
// and a boolean to check if the value has been set.
func (o *GetUserNftOrderRatesAmountsResponse) GetNftTokenAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NftTokenAddress, true
}

// SetNftTokenAddress sets field value
func (o *GetUserNftOrderRatesAmountsResponse) SetNftTokenAddress(v string) {
	o.NftTokenAddress = v
}

// GetFeeRate returns the FeeRate field value
func (o *GetUserNftOrderRatesAmountsResponse) GetFeeRate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FeeRate
}

// GetFeeRateOk returns a tuple with the FeeRate field value
// and a boolean to check if the value has been set.
func (o *GetUserNftOrderRatesAmountsResponse) GetFeeRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeRate, true
}

// SetFeeRate sets field value
func (o *GetUserNftOrderRatesAmountsResponse) SetFeeRate(v int32) {
	o.FeeRate = v
}

// GetAmounts returns the Amounts field value
func (o *GetUserNftOrderRatesAmountsResponse) GetAmounts() []FeeTokenAmount {
	if o == nil {
		var ret []FeeTokenAmount
		return ret
	}

	return o.Amounts
}

// GetAmountsOk returns a tuple with the Amounts field value
// and a boolean to check if the value has been set.
func (o *GetUserNftOrderRatesAmountsResponse) GetAmountsOk() ([]FeeTokenAmount, bool) {
	if o == nil {
		return nil, false
	}
	return o.Amounts, true
}

// SetAmounts sets field value
func (o *GetUserNftOrderRatesAmountsResponse) SetAmounts(v []FeeTokenAmount) {
	o.Amounts = v
}

// GetGasPrice returns the GasPrice field value
func (o *GetUserNftOrderRatesAmountsResponse) GetGasPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value
// and a boolean to check if the value has been set.
func (o *GetUserNftOrderRatesAmountsResponse) GetGasPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasPrice, true
}

// SetGasPrice sets field value
func (o *GetUserNftOrderRatesAmountsResponse) SetGasPrice(v string) {
	o.GasPrice = v
}

// GetCacheOverdueAt returns the CacheOverdueAt field value
func (o *GetUserNftOrderRatesAmountsResponse) GetCacheOverdueAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CacheOverdueAt
}

// GetCacheOverdueAtOk returns a tuple with the CacheOverdueAt field value
// and a boolean to check if the value has been set.
func (o *GetUserNftOrderRatesAmountsResponse) GetCacheOverdueAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CacheOverdueAt, true
}

// SetCacheOverdueAt sets field value
func (o *GetUserNftOrderRatesAmountsResponse) SetCacheOverdueAt(v int64) {
	o.CacheOverdueAt = v
}

func (o GetUserNftOrderRatesAmountsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["nftTokenAddress"] = o.NftTokenAddress
	}
	if true {
		toSerialize["feeRate"] = o.FeeRate
	}
	if true {
		toSerialize["amounts"] = o.Amounts
	}
	if true {
		toSerialize["gasPrice"] = o.GasPrice
	}
	if true {
		toSerialize["cacheOverdueAt"] = o.CacheOverdueAt
	}
	return json.Marshal(toSerialize)
}

type NullableGetUserNftOrderRatesAmountsResponse struct {
	value *GetUserNftOrderRatesAmountsResponse
	isSet bool
}

func (v NullableGetUserNftOrderRatesAmountsResponse) Get() *GetUserNftOrderRatesAmountsResponse {
	return v.value
}

func (v *NullableGetUserNftOrderRatesAmountsResponse) Set(val *GetUserNftOrderRatesAmountsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserNftOrderRatesAmountsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserNftOrderRatesAmountsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserNftOrderRatesAmountsResponse(val *GetUserNftOrderRatesAmountsResponse) *NullableGetUserNftOrderRatesAmountsResponse {
	return &NullableGetUserNftOrderRatesAmountsResponse{value: val, isSet: true}
}

func (v NullableGetUserNftOrderRatesAmountsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserNftOrderRatesAmountsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
