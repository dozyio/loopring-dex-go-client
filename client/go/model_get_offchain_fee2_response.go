/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetOffchainFee2Response The results returned by query user fee rates
type GetOffchainFee2Response struct {
	ResultInfo ResultInfo                   `json:"resultInfo"`
	Data       *GetOffchainFee2ResponseData `json:"data,omitempty"`
}

// NewGetOffchainFee2Response instantiates a new GetOffchainFee2Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOffchainFee2Response(resultInfo ResultInfo) *GetOffchainFee2Response {
	this := GetOffchainFee2Response{}
	this.ResultInfo = resultInfo
	return &this
}

// NewGetOffchainFee2ResponseWithDefaults instantiates a new GetOffchainFee2Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOffchainFee2ResponseWithDefaults() *GetOffchainFee2Response {
	this := GetOffchainFee2Response{}
	return &this
}

// GetResultInfo returns the ResultInfo field value
func (o *GetOffchainFee2Response) GetResultInfo() ResultInfo {
	if o == nil {
		var ret ResultInfo
		return ret
	}

	return o.ResultInfo
}

// GetResultInfoOk returns a tuple with the ResultInfo field value
// and a boolean to check if the value has been set.
func (o *GetOffchainFee2Response) GetResultInfoOk() (*ResultInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultInfo, true
}

// SetResultInfo sets field value
func (o *GetOffchainFee2Response) SetResultInfo(v ResultInfo) {
	o.ResultInfo = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetOffchainFee2Response) GetData() GetOffchainFee2ResponseData {
	if o == nil || o.Data == nil {
		var ret GetOffchainFee2ResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOffchainFee2Response) GetDataOk() (*GetOffchainFee2ResponseData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetOffchainFee2Response) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given GetOffchainFee2ResponseData and assigns it to the Data field.
func (o *GetOffchainFee2Response) SetData(v GetOffchainFee2ResponseData) {
	o.Data = &v
}

func (o GetOffchainFee2Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resultInfo"] = o.ResultInfo
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetOffchainFee2Response struct {
	value *GetOffchainFee2Response
	isSet bool
}

func (v NullableGetOffchainFee2Response) Get() *GetOffchainFee2Response {
	return v.value
}

func (v *NullableGetOffchainFee2Response) Set(val *GetOffchainFee2Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOffchainFee2Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOffchainFee2Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOffchainFee2Response(val *GetOffchainFee2Response) *NullableGetOffchainFee2Response {
	return &NullableGetOffchainFee2Response{value: val, isSet: true}
}

func (v NullableGetOffchainFee2Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOffchainFee2Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
