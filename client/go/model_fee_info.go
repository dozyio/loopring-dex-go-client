/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// FeeInfo Information about fees charged by the exchange.
type FeeInfo struct {
	// Fee category.
	Type string `json:"type"`
	// Fee amount in Ether as wei.
	Fee string `json:"fee"`
}

// NewFeeInfo instantiates a new FeeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeInfo(type_ string, fee string) *FeeInfo {
	this := FeeInfo{}
	this.Type = type_
	this.Fee = fee
	return &this
}

// NewFeeInfoWithDefaults instantiates a new FeeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeInfoWithDefaults() *FeeInfo {
	this := FeeInfo{}
	return &this
}

// GetType returns the Type field value
func (o *FeeInfo) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FeeInfo) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FeeInfo) SetType(v string) {
	o.Type = v
}

// GetFee returns the Fee field value
func (o *FeeInfo) GetFee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *FeeInfo) GetFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *FeeInfo) SetFee(v string) {
	o.Fee = v
}

func (o FeeInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["fee"] = o.Fee
	}
	return json.Marshal(toSerialize)
}

type NullableFeeInfo struct {
	value *FeeInfo
	isSet bool
}

func (v NullableFeeInfo) Get() *FeeInfo {
	return v.value
}

func (v *NullableFeeInfo) Set(val *FeeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeInfo(val *FeeInfo) *NullableFeeInfo {
	return &NullableFeeInfo{value: val, isSet: true}
}

func (v NullableFeeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
