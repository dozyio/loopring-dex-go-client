/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// MinterInfo struct for MinterInfo
type MinterInfo struct {
	AccountId      int64   `json:"accountId"`
	Minter         string  `json:"minter"`
	OriginalMinter *string `json:"originalMinter,omitempty"`
}

// NewMinterInfo instantiates a new MinterInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinterInfo(accountId int64, minter string) *MinterInfo {
	this := MinterInfo{}
	this.AccountId = accountId
	this.Minter = minter
	return &this
}

// NewMinterInfoWithDefaults instantiates a new MinterInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinterInfoWithDefaults() *MinterInfo {
	this := MinterInfo{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *MinterInfo) GetAccountId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *MinterInfo) GetAccountIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *MinterInfo) SetAccountId(v int64) {
	o.AccountId = v
}

// GetMinter returns the Minter field value
func (o *MinterInfo) GetMinter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Minter
}

// GetMinterOk returns a tuple with the Minter field value
// and a boolean to check if the value has been set.
func (o *MinterInfo) GetMinterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Minter, true
}

// SetMinter sets field value
func (o *MinterInfo) SetMinter(v string) {
	o.Minter = v
}

// GetOriginalMinter returns the OriginalMinter field value if set, zero value otherwise.
func (o *MinterInfo) GetOriginalMinter() string {
	if o == nil || o.OriginalMinter == nil {
		var ret string
		return ret
	}
	return *o.OriginalMinter
}

// GetOriginalMinterOk returns a tuple with the OriginalMinter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinterInfo) GetOriginalMinterOk() (*string, bool) {
	if o == nil || o.OriginalMinter == nil {
		return nil, false
	}
	return o.OriginalMinter, true
}

// HasOriginalMinter returns a boolean if a field has been set.
func (o *MinterInfo) HasOriginalMinter() bool {
	if o != nil && o.OriginalMinter != nil {
		return true
	}

	return false
}

// SetOriginalMinter gets a reference to the given string and assigns it to the OriginalMinter field.
func (o *MinterInfo) SetOriginalMinter(v string) {
	o.OriginalMinter = &v
}

func (o MinterInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["minter"] = o.Minter
	}
	if o.OriginalMinter != nil {
		toSerialize["originalMinter"] = o.OriginalMinter
	}
	return json.Marshal(toSerialize)
}

type NullableMinterInfo struct {
	value *MinterInfo
	isSet bool
}

func (v NullableMinterInfo) Get() *MinterInfo {
	return v.value
}

func (v *NullableMinterInfo) Set(val *MinterInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMinterInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMinterInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinterInfo(val *MinterInfo) *NullableMinterInfo {
	return &NullableMinterInfo{value: val, isSet: true}
}

func (v NullableMinterInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinterInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
