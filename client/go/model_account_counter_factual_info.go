/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// AccountCounterFactualInfo model.AccountCounterFactualInfo.description
type AccountCounterFactualInfo struct {
	// field.AccountCounterFactualInfo.accountId
	AccountId int64 `json:"accountId"`
	// field.AccountCounterFactualInfo.wallet
	Wallet string `json:"wallet"`
	// field.AccountCounterFactualInfo.walletFactory
	WalletFactory string `json:"walletFactory"`
	// field.AccountCounterFactualInfo.walletSalt
	WalletSalt string `json:"walletSalt"`
	// field.AccountCounterFactualInfo.walletOwner
	WalletOwner string `json:"walletOwner"`
}

// NewAccountCounterFactualInfo instantiates a new AccountCounterFactualInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountCounterFactualInfo(accountId int64, wallet string, walletFactory string, walletSalt string, walletOwner string) *AccountCounterFactualInfo {
	this := AccountCounterFactualInfo{}
	this.AccountId = accountId
	this.Wallet = wallet
	this.WalletFactory = walletFactory
	this.WalletSalt = walletSalt
	this.WalletOwner = walletOwner
	return &this
}

// NewAccountCounterFactualInfoWithDefaults instantiates a new AccountCounterFactualInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountCounterFactualInfoWithDefaults() *AccountCounterFactualInfo {
	this := AccountCounterFactualInfo{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *AccountCounterFactualInfo) GetAccountId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AccountCounterFactualInfo) GetAccountIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AccountCounterFactualInfo) SetAccountId(v int64) {
	o.AccountId = v
}

// GetWallet returns the Wallet field value
func (o *AccountCounterFactualInfo) GetWallet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Wallet
}

// GetWalletOk returns a tuple with the Wallet field value
// and a boolean to check if the value has been set.
func (o *AccountCounterFactualInfo) GetWalletOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Wallet, true
}

// SetWallet sets field value
func (o *AccountCounterFactualInfo) SetWallet(v string) {
	o.Wallet = v
}

// GetWalletFactory returns the WalletFactory field value
func (o *AccountCounterFactualInfo) GetWalletFactory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletFactory
}

// GetWalletFactoryOk returns a tuple with the WalletFactory field value
// and a boolean to check if the value has been set.
func (o *AccountCounterFactualInfo) GetWalletFactoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletFactory, true
}

// SetWalletFactory sets field value
func (o *AccountCounterFactualInfo) SetWalletFactory(v string) {
	o.WalletFactory = v
}

// GetWalletSalt returns the WalletSalt field value
func (o *AccountCounterFactualInfo) GetWalletSalt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletSalt
}

// GetWalletSaltOk returns a tuple with the WalletSalt field value
// and a boolean to check if the value has been set.
func (o *AccountCounterFactualInfo) GetWalletSaltOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletSalt, true
}

// SetWalletSalt sets field value
func (o *AccountCounterFactualInfo) SetWalletSalt(v string) {
	o.WalletSalt = v
}

// GetWalletOwner returns the WalletOwner field value
func (o *AccountCounterFactualInfo) GetWalletOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletOwner
}

// GetWalletOwnerOk returns a tuple with the WalletOwner field value
// and a boolean to check if the value has been set.
func (o *AccountCounterFactualInfo) GetWalletOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletOwner, true
}

// SetWalletOwner sets field value
func (o *AccountCounterFactualInfo) SetWalletOwner(v string) {
	o.WalletOwner = v
}

func (o AccountCounterFactualInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["wallet"] = o.Wallet
	}
	if true {
		toSerialize["walletFactory"] = o.WalletFactory
	}
	if true {
		toSerialize["walletSalt"] = o.WalletSalt
	}
	if true {
		toSerialize["walletOwner"] = o.WalletOwner
	}
	return json.Marshal(toSerialize)
}

type NullableAccountCounterFactualInfo struct {
	value *AccountCounterFactualInfo
	isSet bool
}

func (v NullableAccountCounterFactualInfo) Get() *AccountCounterFactualInfo {
	return v.value
}

func (v *NullableAccountCounterFactualInfo) Set(val *AccountCounterFactualInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountCounterFactualInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountCounterFactualInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountCounterFactualInfo(val *AccountCounterFactualInfo) *NullableAccountCounterFactualInfo {
	return &NullableAccountCounterFactualInfo{value: val, isSet: true}
}

func (v NullableAccountCounterFactualInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountCounterFactualInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
