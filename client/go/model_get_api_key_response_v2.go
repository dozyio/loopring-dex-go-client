/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetApiKeyResponseV2 model.getApiKeyResponseV2
type GetApiKeyResponseV2 struct {
	ResultInfo ResultInfo `json:"resultInfo"`
	// field.getApiKeyResponseV2.data
	Data string `json:"data"`
}

// NewGetApiKeyResponseV2 instantiates a new GetApiKeyResponseV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApiKeyResponseV2(resultInfo ResultInfo, data string) *GetApiKeyResponseV2 {
	this := GetApiKeyResponseV2{}
	this.ResultInfo = resultInfo
	this.Data = data
	return &this
}

// NewGetApiKeyResponseV2WithDefaults instantiates a new GetApiKeyResponseV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApiKeyResponseV2WithDefaults() *GetApiKeyResponseV2 {
	this := GetApiKeyResponseV2{}
	return &this
}

// GetResultInfo returns the ResultInfo field value
func (o *GetApiKeyResponseV2) GetResultInfo() ResultInfo {
	if o == nil {
		var ret ResultInfo
		return ret
	}

	return o.ResultInfo
}

// GetResultInfoOk returns a tuple with the ResultInfo field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyResponseV2) GetResultInfoOk() (*ResultInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultInfo, true
}

// SetResultInfo sets field value
func (o *GetApiKeyResponseV2) SetResultInfo(v ResultInfo) {
	o.ResultInfo = v
}

// GetData returns the Data field value
func (o *GetApiKeyResponseV2) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyResponseV2) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GetApiKeyResponseV2) SetData(v string) {
	o.Data = v
}

func (o GetApiKeyResponseV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resultInfo"] = o.ResultInfo
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetApiKeyResponseV2 struct {
	value *GetApiKeyResponseV2
	isSet bool
}

func (v NullableGetApiKeyResponseV2) Get() *GetApiKeyResponseV2 {
	return v.value
}

func (v *NullableGetApiKeyResponseV2) Set(val *GetApiKeyResponseV2) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApiKeyResponseV2) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApiKeyResponseV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApiKeyResponseV2(val *GetApiKeyResponseV2) *NullableGetApiKeyResponseV2 {
	return &NullableGetApiKeyResponseV2{value: val, isSet: true}
}

func (v NullableGetApiKeyResponseV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApiKeyResponseV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
