/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// AmmPoolInfoV3 AMM pool info
type AmmPoolInfoV3 struct {
	// AMM pool name, used to calculate domainSeparator of EIP712 hash if use chooses ECDSA sign path.
	Name string `json:"name"`
	// AMM pool market name, can be used to query market related info like ticker, etc
	Market string `json:"market"`
	// AMM pool address
	Address string `json:"address"`
	// AMM pool contract version
	Version string        `json:"version"`
	Tokens  AmmPoolTokens `json:"tokens"`
	// AMM fee bips
	FeeBips    int32             `json:"feeBips"`
	Precisions AmmPoolPrecisions `json:"precisions"`
	// AMM pool online date
	CreatedAt string `json:"createdAt"`
	// AMM market status
	Status int32 `json:"status"`
}

// NewAmmPoolInfoV3 instantiates a new AmmPoolInfoV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmmPoolInfoV3(name string, market string, address string, version string, tokens AmmPoolTokens, feeBips int32, precisions AmmPoolPrecisions, createdAt string, status int32) *AmmPoolInfoV3 {
	this := AmmPoolInfoV3{}
	this.Name = name
	this.Market = market
	this.Address = address
	this.Version = version
	this.Tokens = tokens
	this.FeeBips = feeBips
	this.Precisions = precisions
	this.CreatedAt = createdAt
	this.Status = status
	return &this
}

// NewAmmPoolInfoV3WithDefaults instantiates a new AmmPoolInfoV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmmPoolInfoV3WithDefaults() *AmmPoolInfoV3 {
	this := AmmPoolInfoV3{}
	return &this
}

// GetName returns the Name field value
func (o *AmmPoolInfoV3) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AmmPoolInfoV3) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AmmPoolInfoV3) SetName(v string) {
	o.Name = v
}

// GetMarket returns the Market field value
func (o *AmmPoolInfoV3) GetMarket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Market
}

// GetMarketOk returns a tuple with the Market field value
// and a boolean to check if the value has been set.
func (o *AmmPoolInfoV3) GetMarketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Market, true
}

// SetMarket sets field value
func (o *AmmPoolInfoV3) SetMarket(v string) {
	o.Market = v
}

// GetAddress returns the Address field value
func (o *AmmPoolInfoV3) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *AmmPoolInfoV3) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *AmmPoolInfoV3) SetAddress(v string) {
	o.Address = v
}

// GetVersion returns the Version field value
func (o *AmmPoolInfoV3) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *AmmPoolInfoV3) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *AmmPoolInfoV3) SetVersion(v string) {
	o.Version = v
}

// GetTokens returns the Tokens field value
func (o *AmmPoolInfoV3) GetTokens() AmmPoolTokens {
	if o == nil {
		var ret AmmPoolTokens
		return ret
	}

	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value
// and a boolean to check if the value has been set.
func (o *AmmPoolInfoV3) GetTokensOk() (*AmmPoolTokens, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tokens, true
}

// SetTokens sets field value
func (o *AmmPoolInfoV3) SetTokens(v AmmPoolTokens) {
	o.Tokens = v
}

// GetFeeBips returns the FeeBips field value
func (o *AmmPoolInfoV3) GetFeeBips() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FeeBips
}

// GetFeeBipsOk returns a tuple with the FeeBips field value
// and a boolean to check if the value has been set.
func (o *AmmPoolInfoV3) GetFeeBipsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeBips, true
}

// SetFeeBips sets field value
func (o *AmmPoolInfoV3) SetFeeBips(v int32) {
	o.FeeBips = v
}

// GetPrecisions returns the Precisions field value
func (o *AmmPoolInfoV3) GetPrecisions() AmmPoolPrecisions {
	if o == nil {
		var ret AmmPoolPrecisions
		return ret
	}

	return o.Precisions
}

// GetPrecisionsOk returns a tuple with the Precisions field value
// and a boolean to check if the value has been set.
func (o *AmmPoolInfoV3) GetPrecisionsOk() (*AmmPoolPrecisions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Precisions, true
}

// SetPrecisions sets field value
func (o *AmmPoolInfoV3) SetPrecisions(v AmmPoolPrecisions) {
	o.Precisions = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AmmPoolInfoV3) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AmmPoolInfoV3) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AmmPoolInfoV3) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetStatus returns the Status field value
func (o *AmmPoolInfoV3) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AmmPoolInfoV3) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AmmPoolInfoV3) SetStatus(v int32) {
	o.Status = v
}

func (o AmmPoolInfoV3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["market"] = o.Market
	}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["tokens"] = o.Tokens
	}
	if true {
		toSerialize["feeBips"] = o.FeeBips
	}
	if true {
		toSerialize["precisions"] = o.Precisions
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableAmmPoolInfoV3 struct {
	value *AmmPoolInfoV3
	isSet bool
}

func (v NullableAmmPoolInfoV3) Get() *AmmPoolInfoV3 {
	return v.value
}

func (v *NullableAmmPoolInfoV3) Set(val *AmmPoolInfoV3) {
	v.value = val
	v.isSet = true
}

func (v NullableAmmPoolInfoV3) IsSet() bool {
	return v.isSet
}

func (v *NullableAmmPoolInfoV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmmPoolInfoV3(val *AmmPoolInfoV3) *NullableAmmPoolInfoV3 {
	return &NullableAmmPoolInfoV3{value: val, isSet: true}
}

func (v NullableAmmPoolInfoV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmmPoolInfoV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
