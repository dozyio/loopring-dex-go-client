/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetAmmSnapshotResponse model.GetAmmSnapshotResponse
type GetAmmSnapshotResponse struct {
	ResultInfo ResultInfo  `json:"resultInfo"`
	Data       AmmSnapshot `json:"data"`
}

// NewGetAmmSnapshotResponse instantiates a new GetAmmSnapshotResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAmmSnapshotResponse(resultInfo ResultInfo, data AmmSnapshot) *GetAmmSnapshotResponse {
	this := GetAmmSnapshotResponse{}
	this.ResultInfo = resultInfo
	this.Data = data
	return &this
}

// NewGetAmmSnapshotResponseWithDefaults instantiates a new GetAmmSnapshotResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAmmSnapshotResponseWithDefaults() *GetAmmSnapshotResponse {
	this := GetAmmSnapshotResponse{}
	return &this
}

// GetResultInfo returns the ResultInfo field value
func (o *GetAmmSnapshotResponse) GetResultInfo() ResultInfo {
	if o == nil {
		var ret ResultInfo
		return ret
	}

	return o.ResultInfo
}

// GetResultInfoOk returns a tuple with the ResultInfo field value
// and a boolean to check if the value has been set.
func (o *GetAmmSnapshotResponse) GetResultInfoOk() (*ResultInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultInfo, true
}

// SetResultInfo sets field value
func (o *GetAmmSnapshotResponse) SetResultInfo(v ResultInfo) {
	o.ResultInfo = v
}

// GetData returns the Data field value
func (o *GetAmmSnapshotResponse) GetData() AmmSnapshot {
	if o == nil {
		var ret AmmSnapshot
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetAmmSnapshotResponse) GetDataOk() (*AmmSnapshot, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GetAmmSnapshotResponse) SetData(v AmmSnapshot) {
	o.Data = v
}

func (o GetAmmSnapshotResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resultInfo"] = o.ResultInfo
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetAmmSnapshotResponse struct {
	value *GetAmmSnapshotResponse
	isSet bool
}

func (v NullableGetAmmSnapshotResponse) Get() *GetAmmSnapshotResponse {
	return v.value
}

func (v *NullableGetAmmSnapshotResponse) Set(val *GetAmmSnapshotResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAmmSnapshotResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAmmSnapshotResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAmmSnapshotResponse(val *GetAmmSnapshotResponse) *NullableGetAmmSnapshotResponse {
	return &NullableGetAmmSnapshotResponse{value: val, isSet: true}
}

func (v NullableGetAmmSnapshotResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAmmSnapshotResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
