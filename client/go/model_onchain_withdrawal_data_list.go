/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// OnchainWithdrawalDataList OnchainWithdrawalDataList
type OnchainWithdrawalDataList struct {
	// Total number of records found
	TotalNum int64 `json:"totalNum"`
	// List of OnchainWithdrawalRecord
	Transactions []WithdrawalData `json:"transactions"`
}

// NewOnchainWithdrawalDataList instantiates a new OnchainWithdrawalDataList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnchainWithdrawalDataList(totalNum int64, transactions []WithdrawalData) *OnchainWithdrawalDataList {
	this := OnchainWithdrawalDataList{}
	this.TotalNum = totalNum
	this.Transactions = transactions
	return &this
}

// NewOnchainWithdrawalDataListWithDefaults instantiates a new OnchainWithdrawalDataList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnchainWithdrawalDataListWithDefaults() *OnchainWithdrawalDataList {
	this := OnchainWithdrawalDataList{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *OnchainWithdrawalDataList) GetTotalNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *OnchainWithdrawalDataList) GetTotalNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *OnchainWithdrawalDataList) SetTotalNum(v int64) {
	o.TotalNum = v
}

// GetTransactions returns the Transactions field value
func (o *OnchainWithdrawalDataList) GetTransactions() []WithdrawalData {
	if o == nil {
		var ret []WithdrawalData
		return ret
	}

	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value
// and a boolean to check if the value has been set.
func (o *OnchainWithdrawalDataList) GetTransactionsOk() ([]WithdrawalData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Transactions, true
}

// SetTransactions sets field value
func (o *OnchainWithdrawalDataList) SetTransactions(v []WithdrawalData) {
	o.Transactions = v
}

func (o OnchainWithdrawalDataList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["transactions"] = o.Transactions
	}
	return json.Marshal(toSerialize)
}

type NullableOnchainWithdrawalDataList struct {
	value *OnchainWithdrawalDataList
	isSet bool
}

func (v NullableOnchainWithdrawalDataList) Get() *OnchainWithdrawalDataList {
	return v.value
}

func (v *NullableOnchainWithdrawalDataList) Set(val *OnchainWithdrawalDataList) {
	v.value = val
	v.isSet = true
}

func (v NullableOnchainWithdrawalDataList) IsSet() bool {
	return v.isSet
}

func (v *NullableOnchainWithdrawalDataList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnchainWithdrawalDataList(val *OnchainWithdrawalDataList) *NullableOnchainWithdrawalDataList {
	return &NullableOnchainWithdrawalDataList{value: val, isSet: true}
}

func (v NullableOnchainWithdrawalDataList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnchainWithdrawalDataList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
