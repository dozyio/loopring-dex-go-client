/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// AmmTradeDataListV3 Trading list of AMM pool
type AmmTradeDataListV3 struct {
	// Number of trades
	TotalNum int64 `json:"totalNum"`
	// AMM trade list
	Trades []AmmTradeDataV3 `json:"trades"`
}

// NewAmmTradeDataListV3 instantiates a new AmmTradeDataListV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmmTradeDataListV3(totalNum int64, trades []AmmTradeDataV3) *AmmTradeDataListV3 {
	this := AmmTradeDataListV3{}
	this.TotalNum = totalNum
	this.Trades = trades
	return &this
}

// NewAmmTradeDataListV3WithDefaults instantiates a new AmmTradeDataListV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmmTradeDataListV3WithDefaults() *AmmTradeDataListV3 {
	this := AmmTradeDataListV3{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *AmmTradeDataListV3) GetTotalNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *AmmTradeDataListV3) GetTotalNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *AmmTradeDataListV3) SetTotalNum(v int64) {
	o.TotalNum = v
}

// GetTrades returns the Trades field value
func (o *AmmTradeDataListV3) GetTrades() []AmmTradeDataV3 {
	if o == nil {
		var ret []AmmTradeDataV3
		return ret
	}

	return o.Trades
}

// GetTradesOk returns a tuple with the Trades field value
// and a boolean to check if the value has been set.
func (o *AmmTradeDataListV3) GetTradesOk() ([]AmmTradeDataV3, bool) {
	if o == nil {
		return nil, false
	}
	return o.Trades, true
}

// SetTrades sets field value
func (o *AmmTradeDataListV3) SetTrades(v []AmmTradeDataV3) {
	o.Trades = v
}

func (o AmmTradeDataListV3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["trades"] = o.Trades
	}
	return json.Marshal(toSerialize)
}

type NullableAmmTradeDataListV3 struct {
	value *AmmTradeDataListV3
	isSet bool
}

func (v NullableAmmTradeDataListV3) Get() *AmmTradeDataListV3 {
	return v.value
}

func (v *NullableAmmTradeDataListV3) Set(val *AmmTradeDataListV3) {
	v.value = val
	v.isSet = true
}

func (v NullableAmmTradeDataListV3) IsSet() bool {
	return v.isSet
}

func (v *NullableAmmTradeDataListV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmmTradeDataListV3(val *AmmTradeDataListV3) *NullableAmmTradeDataListV3 {
	return &NullableAmmTradeDataListV3{value: val, isSet: true}
}

func (v NullableAmmTradeDataListV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmmTradeDataListV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
