/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// TradeList A list of trades
type TradeList struct {
	// Total number of tradings
	TotalNum int64 `json:"totalNum"`
	// field.marketTrades.trades
	Trades [][]string `json:"trades"`
}

// NewTradeList instantiates a new TradeList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTradeList(totalNum int64, trades [][]string) *TradeList {
	this := TradeList{}
	this.TotalNum = totalNum
	this.Trades = trades
	return &this
}

// NewTradeListWithDefaults instantiates a new TradeList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTradeListWithDefaults() *TradeList {
	this := TradeList{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *TradeList) GetTotalNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *TradeList) GetTotalNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *TradeList) SetTotalNum(v int64) {
	o.TotalNum = v
}

// GetTrades returns the Trades field value
func (o *TradeList) GetTrades() [][]string {
	if o == nil {
		var ret [][]string
		return ret
	}

	return o.Trades
}

// GetTradesOk returns a tuple with the Trades field value
// and a boolean to check if the value has been set.
func (o *TradeList) GetTradesOk() ([][]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Trades, true
}

// SetTrades sets field value
func (o *TradeList) SetTrades(v [][]string) {
	o.Trades = v
}

func (o TradeList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["trades"] = o.Trades
	}
	return json.Marshal(toSerialize)
}

type NullableTradeList struct {
	value *TradeList
	isSet bool
}

func (v NullableTradeList) Get() *TradeList {
	return v.value
}

func (v *NullableTradeList) Set(val *TradeList) {
	v.value = val
	v.isSet = true
}

func (v NullableTradeList) IsSet() bool {
	return v.isSet
}

func (v *NullableTradeList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTradeList(val *TradeList) *NullableTradeList {
	return &NullableTradeList{value: val, isSet: true}
}

func (v NullableTradeList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTradeList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
