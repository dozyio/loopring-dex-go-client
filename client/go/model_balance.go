/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// Balance model.Balance.description
type Balance struct {
	// field.Balance.accountId
	AccountId int64 `json:"accountId"`
	// field.Balance.tokenId
	TokenId int32 `json:"tokenId"`
	// field.Balance.totalAmount
	TotalAmount string `json:"totalAmount"`
	// field.Balance.frozenAmount
	AmountLocked string         `json:"amountLocked"`
	Pending      PendingBalance `json:"pending"`
}

// NewBalance instantiates a new Balance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalance(accountId int64, tokenId int32, totalAmount string, amountLocked string, pending PendingBalance) *Balance {
	this := Balance{}
	this.AccountId = accountId
	this.TokenId = tokenId
	this.TotalAmount = totalAmount
	this.AmountLocked = amountLocked
	this.Pending = pending
	return &this
}

// NewBalanceWithDefaults instantiates a new Balance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalanceWithDefaults() *Balance {
	this := Balance{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *Balance) GetAccountId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Balance) GetAccountIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Balance) SetAccountId(v int64) {
	o.AccountId = v
}

// GetTokenId returns the TokenId field value
func (o *Balance) GetTokenId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *Balance) GetTokenIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *Balance) SetTokenId(v int32) {
	o.TokenId = v
}

// GetTotalAmount returns the TotalAmount field value
func (o *Balance) GetTotalAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value
// and a boolean to check if the value has been set.
func (o *Balance) GetTotalAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmount, true
}

// SetTotalAmount sets field value
func (o *Balance) SetTotalAmount(v string) {
	o.TotalAmount = v
}

// GetAmountLocked returns the AmountLocked field value
func (o *Balance) GetAmountLocked() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmountLocked
}

// GetAmountLockedOk returns a tuple with the AmountLocked field value
// and a boolean to check if the value has been set.
func (o *Balance) GetAmountLockedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountLocked, true
}

// SetAmountLocked sets field value
func (o *Balance) SetAmountLocked(v string) {
	o.AmountLocked = v
}

// GetPending returns the Pending field value
func (o *Balance) GetPending() PendingBalance {
	if o == nil {
		var ret PendingBalance
		return ret
	}

	return o.Pending
}

// GetPendingOk returns a tuple with the Pending field value
// and a boolean to check if the value has been set.
func (o *Balance) GetPendingOk() (*PendingBalance, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pending, true
}

// SetPending sets field value
func (o *Balance) SetPending(v PendingBalance) {
	o.Pending = v
}

func (o Balance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	if true {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if true {
		toSerialize["amountLocked"] = o.AmountLocked
	}
	if true {
		toSerialize["pending"] = o.Pending
	}
	return json.Marshal(toSerialize)
}

type NullableBalance struct {
	value *Balance
	isSet bool
}

func (v NullableBalance) Get() *Balance {
	return v.value
}

func (v *NullableBalance) Set(val *Balance) {
	v.value = val
	v.isSet = true
}

func (v NullableBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalance(val *Balance) *NullableBalance {
	return &NullableBalance{value: val, isSet: true}
}

func (v NullableBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
