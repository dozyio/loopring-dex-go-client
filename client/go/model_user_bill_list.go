/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// UserBillList struct for UserBillList
type UserBillList struct {
	TotalNum int64      `json:"totalNum"`
	Bills    []UserBill `json:"bills"`
}

// NewUserBillList instantiates a new UserBillList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserBillList(totalNum int64, bills []UserBill) *UserBillList {
	this := UserBillList{}
	this.TotalNum = totalNum
	this.Bills = bills
	return &this
}

// NewUserBillListWithDefaults instantiates a new UserBillList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserBillListWithDefaults() *UserBillList {
	this := UserBillList{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *UserBillList) GetTotalNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *UserBillList) GetTotalNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *UserBillList) SetTotalNum(v int64) {
	o.TotalNum = v
}

// GetBills returns the Bills field value
func (o *UserBillList) GetBills() []UserBill {
	if o == nil {
		var ret []UserBill
		return ret
	}

	return o.Bills
}

// GetBillsOk returns a tuple with the Bills field value
// and a boolean to check if the value has been set.
func (o *UserBillList) GetBillsOk() ([]UserBill, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bills, true
}

// SetBills sets field value
func (o *UserBillList) SetBills(v []UserBill) {
	o.Bills = v
}

func (o UserBillList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["bills"] = o.Bills
	}
	return json.Marshal(toSerialize)
}

type NullableUserBillList struct {
	value *UserBillList
	isSet bool
}

func (v NullableUserBillList) Get() *UserBillList {
	return v.value
}

func (v *NullableUserBillList) Set(val *UserBillList) {
	v.value = val
	v.isSet = true
}

func (v NullableUserBillList) IsSet() bool {
	return v.isSet
}

func (v *NullableUserBillList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserBillList(val *UserBillList) *NullableUserBillList {
	return &NullableUserBillList{value: val, isSet: true}
}

func (v NullableUserBillList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserBillList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
