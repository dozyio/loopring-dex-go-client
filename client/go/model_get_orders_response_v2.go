/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetOrdersResponseV2 Response body
type GetOrdersResponseV2 struct {
	ResultInfo ResultInfo    `json:"resultInfo"`
	Data       *OrdersDetail `json:"data,omitempty"`
}

// NewGetOrdersResponseV2 instantiates a new GetOrdersResponseV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrdersResponseV2(resultInfo ResultInfo) *GetOrdersResponseV2 {
	this := GetOrdersResponseV2{}
	this.ResultInfo = resultInfo
	return &this
}

// NewGetOrdersResponseV2WithDefaults instantiates a new GetOrdersResponseV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrdersResponseV2WithDefaults() *GetOrdersResponseV2 {
	this := GetOrdersResponseV2{}
	return &this
}

// GetResultInfo returns the ResultInfo field value
func (o *GetOrdersResponseV2) GetResultInfo() ResultInfo {
	if o == nil {
		var ret ResultInfo
		return ret
	}

	return o.ResultInfo
}

// GetResultInfoOk returns a tuple with the ResultInfo field value
// and a boolean to check if the value has been set.
func (o *GetOrdersResponseV2) GetResultInfoOk() (*ResultInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultInfo, true
}

// SetResultInfo sets field value
func (o *GetOrdersResponseV2) SetResultInfo(v ResultInfo) {
	o.ResultInfo = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetOrdersResponseV2) GetData() OrdersDetail {
	if o == nil || o.Data == nil {
		var ret OrdersDetail
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersResponseV2) GetDataOk() (*OrdersDetail, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetOrdersResponseV2) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given OrdersDetail and assigns it to the Data field.
func (o *GetOrdersResponseV2) SetData(v OrdersDetail) {
	o.Data = &v
}

func (o GetOrdersResponseV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resultInfo"] = o.ResultInfo
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetOrdersResponseV2 struct {
	value *GetOrdersResponseV2
	isSet bool
}

func (v NullableGetOrdersResponseV2) Get() *GetOrdersResponseV2 {
	return v.value
}

func (v *NullableGetOrdersResponseV2) Set(val *GetOrdersResponseV2) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrdersResponseV2) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrdersResponseV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrdersResponseV2(val *GetOrdersResponseV2) *NullableGetOrdersResponseV2 {
	return &NullableGetOrdersResponseV2{value: val, isSet: true}
}

func (v NullableGetOrdersResponseV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrdersResponseV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
