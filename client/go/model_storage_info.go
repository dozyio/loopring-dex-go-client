/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// StorageInfo struct for StorageInfo
type StorageInfo struct {
	AccountId int64 `json:"accountId"`
	TokenId   int32 `json:"tokenId"`
	StorageId int64 `json:"storageId"`
}

// NewStorageInfo instantiates a new StorageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageInfo(accountId int64, tokenId int32, storageId int64) *StorageInfo {
	this := StorageInfo{}
	this.AccountId = accountId
	this.TokenId = tokenId
	this.StorageId = storageId
	return &this
}

// NewStorageInfoWithDefaults instantiates a new StorageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageInfoWithDefaults() *StorageInfo {
	this := StorageInfo{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *StorageInfo) GetAccountId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *StorageInfo) GetAccountIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *StorageInfo) SetAccountId(v int64) {
	o.AccountId = v
}

// GetTokenId returns the TokenId field value
func (o *StorageInfo) GetTokenId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *StorageInfo) GetTokenIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *StorageInfo) SetTokenId(v int32) {
	o.TokenId = v
}

// GetStorageId returns the StorageId field value
func (o *StorageInfo) GetStorageId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StorageId
}

// GetStorageIdOk returns a tuple with the StorageId field value
// and a boolean to check if the value has been set.
func (o *StorageInfo) GetStorageIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageId, true
}

// SetStorageId sets field value
func (o *StorageInfo) SetStorageId(v int64) {
	o.StorageId = v
}

func (o StorageInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	if true {
		toSerialize["storageId"] = o.StorageId
	}
	return json.Marshal(toSerialize)
}

type NullableStorageInfo struct {
	value *StorageInfo
	isSet bool
}

func (v NullableStorageInfo) Get() *StorageInfo {
	return v.value
}

func (v *NullableStorageInfo) Set(val *StorageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageInfo(val *StorageInfo) *NullableStorageInfo {
	return &NullableStorageInfo{value: val, isSet: true}
}

func (v NullableStorageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
