/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetMixedMarketInfoResponse model.getMarketInfoResponse
type GetMixedMarketInfoResponse struct {
	ResultInfo ResultInfo `json:"resultInfo"`
	// field.getMarketInfoResponse.data
	Data []CombineMarketInfo `json:"data,omitempty"`
}

// NewGetMixedMarketInfoResponse instantiates a new GetMixedMarketInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMixedMarketInfoResponse(resultInfo ResultInfo) *GetMixedMarketInfoResponse {
	this := GetMixedMarketInfoResponse{}
	this.ResultInfo = resultInfo
	return &this
}

// NewGetMixedMarketInfoResponseWithDefaults instantiates a new GetMixedMarketInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMixedMarketInfoResponseWithDefaults() *GetMixedMarketInfoResponse {
	this := GetMixedMarketInfoResponse{}
	return &this
}

// GetResultInfo returns the ResultInfo field value
func (o *GetMixedMarketInfoResponse) GetResultInfo() ResultInfo {
	if o == nil {
		var ret ResultInfo
		return ret
	}

	return o.ResultInfo
}

// GetResultInfoOk returns a tuple with the ResultInfo field value
// and a boolean to check if the value has been set.
func (o *GetMixedMarketInfoResponse) GetResultInfoOk() (*ResultInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultInfo, true
}

// SetResultInfo sets field value
func (o *GetMixedMarketInfoResponse) SetResultInfo(v ResultInfo) {
	o.ResultInfo = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetMixedMarketInfoResponse) GetData() []CombineMarketInfo {
	if o == nil || o.Data == nil {
		var ret []CombineMarketInfo
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMixedMarketInfoResponse) GetDataOk() ([]CombineMarketInfo, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetMixedMarketInfoResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []CombineMarketInfo and assigns it to the Data field.
func (o *GetMixedMarketInfoResponse) SetData(v []CombineMarketInfo) {
	o.Data = v
}

func (o GetMixedMarketInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resultInfo"] = o.ResultInfo
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetMixedMarketInfoResponse struct {
	value *GetMixedMarketInfoResponse
	isSet bool
}

func (v NullableGetMixedMarketInfoResponse) Get() *GetMixedMarketInfoResponse {
	return v.value
}

func (v *NullableGetMixedMarketInfoResponse) Set(val *GetMixedMarketInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMixedMarketInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMixedMarketInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMixedMarketInfoResponse(val *GetMixedMarketInfoResponse) *NullableGetMixedMarketInfoResponse {
	return &NullableGetMixedMarketInfoResponse{value: val, isSet: true}
}

func (v NullableGetMixedMarketInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMixedMarketInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
