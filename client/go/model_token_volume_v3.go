/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// TokenVolumeV3 Wrapper object used to describe a token associated with a certain quantity.
type TokenVolumeV3 struct {
	// The Loopring's token identifier.
	TokenId int32 `json:"tokenId"`
	// The volume of the token
	Volume string `json:"volume"`
}

// NewTokenVolumeV3 instantiates a new TokenVolumeV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenVolumeV3(tokenId int32, volume string) *TokenVolumeV3 {
	this := TokenVolumeV3{}
	this.TokenId = tokenId
	this.Volume = volume
	return &this
}

// NewTokenVolumeV3WithDefaults instantiates a new TokenVolumeV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenVolumeV3WithDefaults() *TokenVolumeV3 {
	this := TokenVolumeV3{}
	return &this
}

// GetTokenId returns the TokenId field value
func (o *TokenVolumeV3) GetTokenId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *TokenVolumeV3) GetTokenIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *TokenVolumeV3) SetTokenId(v int32) {
	o.TokenId = v
}

// GetVolume returns the Volume field value
func (o *TokenVolumeV3) GetVolume() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value
// and a boolean to check if the value has been set.
func (o *TokenVolumeV3) GetVolumeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Volume, true
}

// SetVolume sets field value
func (o *TokenVolumeV3) SetVolume(v string) {
	o.Volume = v
}

func (o TokenVolumeV3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	if true {
		toSerialize["volume"] = o.Volume
	}
	return json.Marshal(toSerialize)
}

type NullableTokenVolumeV3 struct {
	value *TokenVolumeV3
	isSet bool
}

func (v NullableTokenVolumeV3) Get() *TokenVolumeV3 {
	return v.value
}

func (v *NullableTokenVolumeV3) Set(val *TokenVolumeV3) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenVolumeV3) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenVolumeV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenVolumeV3(val *TokenVolumeV3) *NullableTokenVolumeV3 {
	return &NullableTokenVolumeV3{value: val, isSet: true}
}

func (v NullableTokenVolumeV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenVolumeV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
