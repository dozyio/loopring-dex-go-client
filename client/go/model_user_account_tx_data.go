/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// UserAccountTxData Response data
type UserAccountTxData struct {
	// Unique ID
	Id int64 `json:"id"`
	// hash
	Hash string `json:"hash"`
	// Owner address of the Tx
	Owner string `json:"owner"`
	// Transaction hash
	TxHash string `json:"txHash"`
	// Fee token symbol
	FeeTokenSymbol string `json:"feeTokenSymbol"`
	// Fee amount in wei
	FeeAmount string `json:"feeAmount"`
	// Current status
	Status string `json:"status"`
	// Progress
	Progress string `json:"progress"`
	// Create time
	Timestamp int64 `json:"timestamp"`
	// Block height
	BlockNum int64 `json:"blockNum"`
	// Update time
	UpdatedAt    int64 `json:"updatedAt"`
	BlockId      int64 `json:"blockId"`
	IndexInBlock int32 `json:"indexInBlock"`
}

// NewUserAccountTxData instantiates a new UserAccountTxData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAccountTxData(id int64, hash string, owner string, txHash string, feeTokenSymbol string, feeAmount string, status string, progress string, timestamp int64, blockNum int64, updatedAt int64, blockId int64, indexInBlock int32) *UserAccountTxData {
	this := UserAccountTxData{}
	this.Id = id
	this.Hash = hash
	this.Owner = owner
	this.TxHash = txHash
	this.FeeTokenSymbol = feeTokenSymbol
	this.FeeAmount = feeAmount
	this.Status = status
	this.Progress = progress
	this.Timestamp = timestamp
	this.BlockNum = blockNum
	this.UpdatedAt = updatedAt
	this.BlockId = blockId
	this.IndexInBlock = indexInBlock
	return &this
}

// NewUserAccountTxDataWithDefaults instantiates a new UserAccountTxData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAccountTxDataWithDefaults() *UserAccountTxData {
	this := UserAccountTxData{}
	return &this
}

// GetId returns the Id field value
func (o *UserAccountTxData) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserAccountTxData) SetId(v int64) {
	o.Id = v
}

// GetHash returns the Hash field value
func (o *UserAccountTxData) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *UserAccountTxData) SetHash(v string) {
	o.Hash = v
}

// GetOwner returns the Owner field value
func (o *UserAccountTxData) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *UserAccountTxData) SetOwner(v string) {
	o.Owner = v
}

// GetTxHash returns the TxHash field value
func (o *UserAccountTxData) GetTxHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxHash
}

// GetTxHashOk returns a tuple with the TxHash field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetTxHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxHash, true
}

// SetTxHash sets field value
func (o *UserAccountTxData) SetTxHash(v string) {
	o.TxHash = v
}

// GetFeeTokenSymbol returns the FeeTokenSymbol field value
func (o *UserAccountTxData) GetFeeTokenSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeeTokenSymbol
}

// GetFeeTokenSymbolOk returns a tuple with the FeeTokenSymbol field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetFeeTokenSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeTokenSymbol, true
}

// SetFeeTokenSymbol sets field value
func (o *UserAccountTxData) SetFeeTokenSymbol(v string) {
	o.FeeTokenSymbol = v
}

// GetFeeAmount returns the FeeAmount field value
func (o *UserAccountTxData) GetFeeAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeeAmount
}

// GetFeeAmountOk returns a tuple with the FeeAmount field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetFeeAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeAmount, true
}

// SetFeeAmount sets field value
func (o *UserAccountTxData) SetFeeAmount(v string) {
	o.FeeAmount = v
}

// GetStatus returns the Status field value
func (o *UserAccountTxData) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *UserAccountTxData) SetStatus(v string) {
	o.Status = v
}

// GetProgress returns the Progress field value
func (o *UserAccountTxData) GetProgress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Progress
}

// GetProgressOk returns a tuple with the Progress field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetProgressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Progress, true
}

// SetProgress sets field value
func (o *UserAccountTxData) SetProgress(v string) {
	o.Progress = v
}

// GetTimestamp returns the Timestamp field value
func (o *UserAccountTxData) GetTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *UserAccountTxData) SetTimestamp(v int64) {
	o.Timestamp = v
}

// GetBlockNum returns the BlockNum field value
func (o *UserAccountTxData) GetBlockNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BlockNum
}

// GetBlockNumOk returns a tuple with the BlockNum field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetBlockNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockNum, true
}

// SetBlockNum sets field value
func (o *UserAccountTxData) SetBlockNum(v int64) {
	o.BlockNum = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *UserAccountTxData) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *UserAccountTxData) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

// GetBlockId returns the BlockId field value
func (o *UserAccountTxData) GetBlockId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetBlockIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockId, true
}

// SetBlockId sets field value
func (o *UserAccountTxData) SetBlockId(v int64) {
	o.BlockId = v
}

// GetIndexInBlock returns the IndexInBlock field value
func (o *UserAccountTxData) GetIndexInBlock() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IndexInBlock
}

// GetIndexInBlockOk returns a tuple with the IndexInBlock field value
// and a boolean to check if the value has been set.
func (o *UserAccountTxData) GetIndexInBlockOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexInBlock, true
}

// SetIndexInBlock sets field value
func (o *UserAccountTxData) SetIndexInBlock(v int32) {
	o.IndexInBlock = v
}

func (o UserAccountTxData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["hash"] = o.Hash
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["txHash"] = o.TxHash
	}
	if true {
		toSerialize["feeTokenSymbol"] = o.FeeTokenSymbol
	}
	if true {
		toSerialize["feeAmount"] = o.FeeAmount
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["progress"] = o.Progress
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["blockNum"] = o.BlockNum
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if true {
		toSerialize["blockId"] = o.BlockId
	}
	if true {
		toSerialize["indexInBlock"] = o.IndexInBlock
	}
	return json.Marshal(toSerialize)
}

type NullableUserAccountTxData struct {
	value *UserAccountTxData
	isSet bool
}

func (v NullableUserAccountTxData) Get() *UserAccountTxData {
	return v.value
}

func (v *NullableUserAccountTxData) Set(val *UserAccountTxData) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAccountTxData) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAccountTxData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAccountTxData(val *UserAccountTxData) *NullableUserAccountTxData {
	return &NullableUserAccountTxData{value: val, isSet: true}
}

func (v NullableUserAccountTxData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAccountTxData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
