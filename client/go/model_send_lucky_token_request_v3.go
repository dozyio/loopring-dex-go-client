/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// SendLuckyTokenRequestV3 struct for SendLuckyTokenRequestV3
type SendLuckyTokenRequestV3 struct {
	// field.SendLuckyTokenRequestV3.exchange
	Type string `json:"type"`
	// field.SendLuckyTokenRequestV3.numbers
	Numbers int64 `json:"numbers"`
	// field.SendLuckyTokenRequestV3.memo
	Memo string `json:"memo"`
	// field.SendLuckyTokenRequestV3.signerFlag
	SignerFlag string `json:"signerFlag"`
	// field.SendLuckyTokenRequestV3.templateId
	TemplateId int64 `json:"templateId"`
	// field.SendLuckyTokenRequestV3.validSince
	ValidSince int32 `json:"validSince"`
	// field.SendLuckyTokenRequestV3.luckyToken
	LuckyToken int64 `json:"luckyToken"`
}

// NewSendLuckyTokenRequestV3 instantiates a new SendLuckyTokenRequestV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendLuckyTokenRequestV3(type_ string, numbers int64, memo string, signerFlag string, templateId int64, validSince int32, luckyToken int64) *SendLuckyTokenRequestV3 {
	this := SendLuckyTokenRequestV3{}
	this.Type = type_
	this.Numbers = numbers
	this.Memo = memo
	this.SignerFlag = signerFlag
	this.TemplateId = templateId
	this.ValidSince = validSince
	this.LuckyToken = luckyToken
	return &this
}

// NewSendLuckyTokenRequestV3WithDefaults instantiates a new SendLuckyTokenRequestV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendLuckyTokenRequestV3WithDefaults() *SendLuckyTokenRequestV3 {
	this := SendLuckyTokenRequestV3{}
	return &this
}

// GetType returns the Type field value
func (o *SendLuckyTokenRequestV3) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SendLuckyTokenRequestV3) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SendLuckyTokenRequestV3) SetType(v string) {
	o.Type = v
}

// GetNumbers returns the Numbers field value
func (o *SendLuckyTokenRequestV3) GetNumbers() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Numbers
}

// GetNumbersOk returns a tuple with the Numbers field value
// and a boolean to check if the value has been set.
func (o *SendLuckyTokenRequestV3) GetNumbersOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Numbers, true
}

// SetNumbers sets field value
func (o *SendLuckyTokenRequestV3) SetNumbers(v int64) {
	o.Numbers = v
}

// GetMemo returns the Memo field value
func (o *SendLuckyTokenRequestV3) GetMemo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memo
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
func (o *SendLuckyTokenRequestV3) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memo, true
}

// SetMemo sets field value
func (o *SendLuckyTokenRequestV3) SetMemo(v string) {
	o.Memo = v
}

// GetSignerFlag returns the SignerFlag field value
func (o *SendLuckyTokenRequestV3) GetSignerFlag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerFlag
}

// GetSignerFlagOk returns a tuple with the SignerFlag field value
// and a boolean to check if the value has been set.
func (o *SendLuckyTokenRequestV3) GetSignerFlagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerFlag, true
}

// SetSignerFlag sets field value
func (o *SendLuckyTokenRequestV3) SetSignerFlag(v string) {
	o.SignerFlag = v
}

// GetTemplateId returns the TemplateId field value
func (o *SendLuckyTokenRequestV3) GetTemplateId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value
// and a boolean to check if the value has been set.
func (o *SendLuckyTokenRequestV3) GetTemplateIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateId, true
}

// SetTemplateId sets field value
func (o *SendLuckyTokenRequestV3) SetTemplateId(v int64) {
	o.TemplateId = v
}

// GetValidSince returns the ValidSince field value
func (o *SendLuckyTokenRequestV3) GetValidSince() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValidSince
}

// GetValidSinceOk returns a tuple with the ValidSince field value
// and a boolean to check if the value has been set.
func (o *SendLuckyTokenRequestV3) GetValidSinceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidSince, true
}

// SetValidSince sets field value
func (o *SendLuckyTokenRequestV3) SetValidSince(v int32) {
	o.ValidSince = v
}

// GetLuckyToken returns the LuckyToken field value
func (o *SendLuckyTokenRequestV3) GetLuckyToken() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LuckyToken
}

// GetLuckyTokenOk returns a tuple with the LuckyToken field value
// and a boolean to check if the value has been set.
func (o *SendLuckyTokenRequestV3) GetLuckyTokenOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LuckyToken, true
}

// SetLuckyToken sets field value
func (o *SendLuckyTokenRequestV3) SetLuckyToken(v int64) {
	o.LuckyToken = v
}

func (o SendLuckyTokenRequestV3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["numbers"] = o.Numbers
	}
	if true {
		toSerialize["memo"] = o.Memo
	}
	if true {
		toSerialize["signerFlag"] = o.SignerFlag
	}
	if true {
		toSerialize["templateId"] = o.TemplateId
	}
	if true {
		toSerialize["validSince"] = o.ValidSince
	}
	if true {
		toSerialize["luckyToken"] = o.LuckyToken
	}
	return json.Marshal(toSerialize)
}

type NullableSendLuckyTokenRequestV3 struct {
	value *SendLuckyTokenRequestV3
	isSet bool
}

func (v NullableSendLuckyTokenRequestV3) Get() *SendLuckyTokenRequestV3 {
	return v.value
}

func (v *NullableSendLuckyTokenRequestV3) Set(val *SendLuckyTokenRequestV3) {
	v.value = val
	v.isSet = true
}

func (v NullableSendLuckyTokenRequestV3) IsSet() bool {
	return v.isSet
}

func (v *NullableSendLuckyTokenRequestV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendLuckyTokenRequestV3(val *SendLuckyTokenRequestV3) *NullableSendLuckyTokenRequestV3 {
	return &NullableSendLuckyTokenRequestV3{value: val, isSet: true}
}

func (v NullableSendLuckyTokenRequestV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendLuckyTokenRequestV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
