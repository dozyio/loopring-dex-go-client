/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// ForwardEthTxRequest Send a raw Ethereum transaction
type ForwardEthTxRequest struct {
	// Serialized Ethereum signature transaction as hexadecimal string
	Data string `json:"data"`
}

// NewForwardEthTxRequest instantiates a new ForwardEthTxRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForwardEthTxRequest(data string) *ForwardEthTxRequest {
	this := ForwardEthTxRequest{}
	this.Data = data
	return &this
}

// NewForwardEthTxRequestWithDefaults instantiates a new ForwardEthTxRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForwardEthTxRequestWithDefaults() *ForwardEthTxRequest {
	this := ForwardEthTxRequest{}
	return &this
}

// GetData returns the Data field value
func (o *ForwardEthTxRequest) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ForwardEthTxRequest) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ForwardEthTxRequest) SetData(v string) {
	o.Data = v
}

func (o ForwardEthTxRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableForwardEthTxRequest struct {
	value *ForwardEthTxRequest
	isSet bool
}

func (v NullableForwardEthTxRequest) Get() *ForwardEthTxRequest {
	return v.value
}

func (v *NullableForwardEthTxRequest) Set(val *ForwardEthTxRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableForwardEthTxRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableForwardEthTxRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForwardEthTxRequest(val *ForwardEthTxRequest) *NullableForwardEthTxRequest {
	return &NullableForwardEthTxRequest{value: val, isSet: true}
}

func (v NullableForwardEthTxRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForwardEthTxRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
