/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// AmmPoolTokens Wrapper object containing information about the tokens in the pool
type AmmPoolTokens struct {
	// An array containing the unique identifiers of those tokens that are currently in the pool, seq matters as most requests ask for the same sequence.
	Pooled []map[string]interface{} `json:"pooled"`
	// The unique identifier of the pool-specific LP token. This token is minted when supplying liquidity to the pool, and represents liquidity stakes in it
	Lp int32 `json:"lp"`
}

// NewAmmPoolTokens instantiates a new AmmPoolTokens object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmmPoolTokens(pooled []map[string]interface{}, lp int32) *AmmPoolTokens {
	this := AmmPoolTokens{}
	this.Pooled = pooled
	this.Lp = lp
	return &this
}

// NewAmmPoolTokensWithDefaults instantiates a new AmmPoolTokens object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmmPoolTokensWithDefaults() *AmmPoolTokens {
	this := AmmPoolTokens{}
	return &this
}

// GetPooled returns the Pooled field value
func (o *AmmPoolTokens) GetPooled() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Pooled
}

// GetPooledOk returns a tuple with the Pooled field value
// and a boolean to check if the value has been set.
func (o *AmmPoolTokens) GetPooledOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pooled, true
}

// SetPooled sets field value
func (o *AmmPoolTokens) SetPooled(v []map[string]interface{}) {
	o.Pooled = v
}

// GetLp returns the Lp field value
func (o *AmmPoolTokens) GetLp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Lp
}

// GetLpOk returns a tuple with the Lp field value
// and a boolean to check if the value has been set.
func (o *AmmPoolTokens) GetLpOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lp, true
}

// SetLp sets field value
func (o *AmmPoolTokens) SetLp(v int32) {
	o.Lp = v
}

func (o AmmPoolTokens) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pooled"] = o.Pooled
	}
	if true {
		toSerialize["lp"] = o.Lp
	}
	return json.Marshal(toSerialize)
}

type NullableAmmPoolTokens struct {
	value *AmmPoolTokens
	isSet bool
}

func (v NullableAmmPoolTokens) Get() *AmmPoolTokens {
	return v.value
}

func (v *NullableAmmPoolTokens) Set(val *AmmPoolTokens) {
	v.value = val
	v.isSet = true
}

func (v NullableAmmPoolTokens) IsSet() bool {
	return v.isSet
}

func (v *NullableAmmPoolTokens) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmmPoolTokens(val *AmmPoolTokens) *NullableAmmPoolTokens {
	return &NullableAmmPoolTokens{value: val, isSet: true}
}

func (v NullableAmmPoolTokens) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmmPoolTokens) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
