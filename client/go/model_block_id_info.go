/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// BlockIdInfo struct for BlockIdInfo
type BlockIdInfo struct {
	BlockId      int64 `json:"blockId"`
	IndexInBlock int32 `json:"indexInBlock"`
}

// NewBlockIdInfo instantiates a new BlockIdInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockIdInfo(blockId int64, indexInBlock int32) *BlockIdInfo {
	this := BlockIdInfo{}
	this.BlockId = blockId
	this.IndexInBlock = indexInBlock
	return &this
}

// NewBlockIdInfoWithDefaults instantiates a new BlockIdInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockIdInfoWithDefaults() *BlockIdInfo {
	this := BlockIdInfo{}
	return &this
}

// GetBlockId returns the BlockId field value
func (o *BlockIdInfo) GetBlockId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value
// and a boolean to check if the value has been set.
func (o *BlockIdInfo) GetBlockIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockId, true
}

// SetBlockId sets field value
func (o *BlockIdInfo) SetBlockId(v int64) {
	o.BlockId = v
}

// GetIndexInBlock returns the IndexInBlock field value
func (o *BlockIdInfo) GetIndexInBlock() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IndexInBlock
}

// GetIndexInBlockOk returns a tuple with the IndexInBlock field value
// and a boolean to check if the value has been set.
func (o *BlockIdInfo) GetIndexInBlockOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexInBlock, true
}

// SetIndexInBlock sets field value
func (o *BlockIdInfo) SetIndexInBlock(v int32) {
	o.IndexInBlock = v
}

func (o BlockIdInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["blockId"] = o.BlockId
	}
	if true {
		toSerialize["indexInBlock"] = o.IndexInBlock
	}
	return json.Marshal(toSerialize)
}

type NullableBlockIdInfo struct {
	value *BlockIdInfo
	isSet bool
}

func (v NullableBlockIdInfo) Get() *BlockIdInfo {
	return v.value
}

func (v *NullableBlockIdInfo) Set(val *BlockIdInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockIdInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockIdInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockIdInfo(val *BlockIdInfo) *NullableBlockIdInfo {
	return &NullableBlockIdInfo{value: val, isSet: true}
}

func (v NullableBlockIdInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockIdInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
