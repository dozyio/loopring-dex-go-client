/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// BatchSubmitOrderRequest Batch submit order parameters.
type BatchSubmitOrderRequest struct {
	// Orders to submit.
	Orders []SubmitOrderRequest `json:"orders"`
}

// NewBatchSubmitOrderRequest instantiates a new BatchSubmitOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchSubmitOrderRequest(orders []SubmitOrderRequest) *BatchSubmitOrderRequest {
	this := BatchSubmitOrderRequest{}
	this.Orders = orders
	return &this
}

// NewBatchSubmitOrderRequestWithDefaults instantiates a new BatchSubmitOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchSubmitOrderRequestWithDefaults() *BatchSubmitOrderRequest {
	this := BatchSubmitOrderRequest{}
	return &this
}

// GetOrders returns the Orders field value
func (o *BatchSubmitOrderRequest) GetOrders() []SubmitOrderRequest {
	if o == nil {
		var ret []SubmitOrderRequest
		return ret
	}

	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value
// and a boolean to check if the value has been set.
func (o *BatchSubmitOrderRequest) GetOrdersOk() ([]SubmitOrderRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Orders, true
}

// SetOrders sets field value
func (o *BatchSubmitOrderRequest) SetOrders(v []SubmitOrderRequest) {
	o.Orders = v
}

func (o BatchSubmitOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["orders"] = o.Orders
	}
	return json.Marshal(toSerialize)
}

type NullableBatchSubmitOrderRequest struct {
	value *BatchSubmitOrderRequest
	isSet bool
}

func (v NullableBatchSubmitOrderRequest) Get() *BatchSubmitOrderRequest {
	return v.value
}

func (v *NullableBatchSubmitOrderRequest) Set(val *BatchSubmitOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchSubmitOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchSubmitOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchSubmitOrderRequest(val *BatchSubmitOrderRequest) *NullableBatchSubmitOrderRequest {
	return &NullableBatchSubmitOrderRequest{value: val, isSet: true}
}

func (v NullableBatchSubmitOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchSubmitOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
