/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetNftMintersResponse struct for GetNftMintersResponse
type GetNftMintersResponse struct {
	TotalNum int32    `json:"totalNum"`
	Minters  []string `json:"minters"`
}

// NewGetNftMintersResponse instantiates a new GetNftMintersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNftMintersResponse(totalNum int32, minters []string) *GetNftMintersResponse {
	this := GetNftMintersResponse{}
	this.TotalNum = totalNum
	this.Minters = minters
	return &this
}

// NewGetNftMintersResponseWithDefaults instantiates a new GetNftMintersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNftMintersResponseWithDefaults() *GetNftMintersResponse {
	this := GetNftMintersResponse{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *GetNftMintersResponse) GetTotalNum() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *GetNftMintersResponse) GetTotalNumOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *GetNftMintersResponse) SetTotalNum(v int32) {
	o.TotalNum = v
}

// GetMinters returns the Minters field value
func (o *GetNftMintersResponse) GetMinters() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Minters
}

// GetMintersOk returns a tuple with the Minters field value
// and a boolean to check if the value has been set.
func (o *GetNftMintersResponse) GetMintersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Minters, true
}

// SetMinters sets field value
func (o *GetNftMintersResponse) SetMinters(v []string) {
	o.Minters = v
}

func (o GetNftMintersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["minters"] = o.Minters
	}
	return json.Marshal(toSerialize)
}

type NullableGetNftMintersResponse struct {
	value *GetNftMintersResponse
	isSet bool
}

func (v NullableGetNftMintersResponse) Get() *GetNftMintersResponse {
	return v.value
}

func (v *NullableGetNftMintersResponse) Set(val *GetNftMintersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNftMintersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNftMintersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNftMintersResponse(val *GetNftMintersResponse) *NullableGetNftMintersResponse {
	return &NullableGetNftMintersResponse{value: val, isSet: true}
}

func (v NullableGetNftMintersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNftMintersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
