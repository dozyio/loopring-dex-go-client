/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetUserNftTransfersResponse model.GetUserNftTransfersResponse.description
type GetUserNftTransfersResponse struct {
	// field.totalNum.description
	TotalNum int64 `json:"totalNum"`
	// field.GetUserNftTransfersResponse.NftTransferDataList
	Transfers []NftTransferData `json:"transfers"`
}

// NewGetUserNftTransfersResponse instantiates a new GetUserNftTransfersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserNftTransfersResponse(totalNum int64, transfers []NftTransferData) *GetUserNftTransfersResponse {
	this := GetUserNftTransfersResponse{}
	this.TotalNum = totalNum
	this.Transfers = transfers
	return &this
}

// NewGetUserNftTransfersResponseWithDefaults instantiates a new GetUserNftTransfersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserNftTransfersResponseWithDefaults() *GetUserNftTransfersResponse {
	this := GetUserNftTransfersResponse{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *GetUserNftTransfersResponse) GetTotalNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *GetUserNftTransfersResponse) GetTotalNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *GetUserNftTransfersResponse) SetTotalNum(v int64) {
	o.TotalNum = v
}

// GetTransfers returns the Transfers field value
func (o *GetUserNftTransfersResponse) GetTransfers() []NftTransferData {
	if o == nil {
		var ret []NftTransferData
		return ret
	}

	return o.Transfers
}

// GetTransfersOk returns a tuple with the Transfers field value
// and a boolean to check if the value has been set.
func (o *GetUserNftTransfersResponse) GetTransfersOk() ([]NftTransferData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Transfers, true
}

// SetTransfers sets field value
func (o *GetUserNftTransfersResponse) SetTransfers(v []NftTransferData) {
	o.Transfers = v
}

func (o GetUserNftTransfersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["transfers"] = o.Transfers
	}
	return json.Marshal(toSerialize)
}

type NullableGetUserNftTransfersResponse struct {
	value *GetUserNftTransfersResponse
	isSet bool
}

func (v NullableGetUserNftTransfersResponse) Get() *GetUserNftTransfersResponse {
	return v.value
}

func (v *NullableGetUserNftTransfersResponse) Set(val *GetUserNftTransfersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserNftTransfersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserNftTransfersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserNftTransfersResponse(val *GetUserNftTransfersResponse) *NullableGetUserNftTransfersResponse {
	return &NullableGetUserNftTransfersResponse{value: val, isSet: true}
}

func (v NullableGetUserNftTransfersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserNftTransfersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
