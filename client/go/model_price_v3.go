/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// PriceV3 Token fiat price
type PriceV3 struct {
	// Token symbol
	Symbol string `json:"symbol"`
	// Fiat price
	Price string `json:"price"`
	// Last update timestamp
	UpdatedAt int64 `json:"updatedAt"`
}

// NewPriceV3 instantiates a new PriceV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceV3(symbol string, price string, updatedAt int64) *PriceV3 {
	this := PriceV3{}
	this.Symbol = symbol
	this.Price = price
	this.UpdatedAt = updatedAt
	return &this
}

// NewPriceV3WithDefaults instantiates a new PriceV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceV3WithDefaults() *PriceV3 {
	this := PriceV3{}
	return &this
}

// GetSymbol returns the Symbol field value
func (o *PriceV3) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *PriceV3) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *PriceV3) SetSymbol(v string) {
	o.Symbol = v
}

// GetPrice returns the Price field value
func (o *PriceV3) GetPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *PriceV3) GetPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *PriceV3) SetPrice(v string) {
	o.Price = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PriceV3) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PriceV3) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PriceV3) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

func (o PriceV3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePriceV3 struct {
	value *PriceV3
	isSet bool
}

func (v NullablePriceV3) Get() *PriceV3 {
	return v.value
}

func (v *NullablePriceV3) Set(val *PriceV3) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceV3) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceV3(val *PriceV3) *NullablePriceV3 {
	return &NullablePriceV3{value: val, isSet: true}
}

func (v NullablePriceV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
