/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// AmmPoolJoinRequest model.AmmPoolJoinRequest.description
type AmmPoolJoinRequest struct {
	// field.AmmPoolJoinRequest.owner
	Owner string `json:"owner"`
	// field.AmmPoolJoinRequest.poolAddress
	PoolAddress string `json:"poolAddress"`
	// field.AmmPoolJoinRequest.joinAmounts
	JoinAmounts string `json:"joinAmounts"`
	// field.AmmPoolJoinRequest.joinStorageIDs
	JoinStorageIDs string `json:"joinStorageIDs"`
	// field.AmmPoolJoinRequest.mintMinAmount
	MintMinAmount string `json:"mintMinAmount"`
	// field.AmmPoolJoinRequest.fee
	Fee string `json:"fee"`
	// field.AmmPoolJoinRequest.validUntil
	ValidUntil int32 `json:"validUntil"`
	// field.AmmPoolJoinRequest.ecdsaSig
	EcdsaSig string `json:"ecdsaSig"`
	// field.AmmPoolJoinRequest.eddsaSig
	EddsaSig string `json:"eddsaSig"`
}

// NewAmmPoolJoinRequest instantiates a new AmmPoolJoinRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmmPoolJoinRequest(owner string, poolAddress string, joinAmounts string, joinStorageIDs string, mintMinAmount string, fee string, validUntil int32, ecdsaSig string, eddsaSig string) *AmmPoolJoinRequest {
	this := AmmPoolJoinRequest{}
	this.Owner = owner
	this.PoolAddress = poolAddress
	this.JoinAmounts = joinAmounts
	this.JoinStorageIDs = joinStorageIDs
	this.MintMinAmount = mintMinAmount
	this.Fee = fee
	this.ValidUntil = validUntil
	this.EcdsaSig = ecdsaSig
	this.EddsaSig = eddsaSig
	return &this
}

// NewAmmPoolJoinRequestWithDefaults instantiates a new AmmPoolJoinRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmmPoolJoinRequestWithDefaults() *AmmPoolJoinRequest {
	this := AmmPoolJoinRequest{}
	return &this
}

// GetOwner returns the Owner field value
func (o *AmmPoolJoinRequest) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *AmmPoolJoinRequest) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *AmmPoolJoinRequest) SetOwner(v string) {
	o.Owner = v
}

// GetPoolAddress returns the PoolAddress field value
func (o *AmmPoolJoinRequest) GetPoolAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolAddress
}

// GetPoolAddressOk returns a tuple with the PoolAddress field value
// and a boolean to check if the value has been set.
func (o *AmmPoolJoinRequest) GetPoolAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolAddress, true
}

// SetPoolAddress sets field value
func (o *AmmPoolJoinRequest) SetPoolAddress(v string) {
	o.PoolAddress = v
}

// GetJoinAmounts returns the JoinAmounts field value
func (o *AmmPoolJoinRequest) GetJoinAmounts() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JoinAmounts
}

// GetJoinAmountsOk returns a tuple with the JoinAmounts field value
// and a boolean to check if the value has been set.
func (o *AmmPoolJoinRequest) GetJoinAmountsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JoinAmounts, true
}

// SetJoinAmounts sets field value
func (o *AmmPoolJoinRequest) SetJoinAmounts(v string) {
	o.JoinAmounts = v
}

// GetJoinStorageIDs returns the JoinStorageIDs field value
func (o *AmmPoolJoinRequest) GetJoinStorageIDs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JoinStorageIDs
}

// GetJoinStorageIDsOk returns a tuple with the JoinStorageIDs field value
// and a boolean to check if the value has been set.
func (o *AmmPoolJoinRequest) GetJoinStorageIDsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JoinStorageIDs, true
}

// SetJoinStorageIDs sets field value
func (o *AmmPoolJoinRequest) SetJoinStorageIDs(v string) {
	o.JoinStorageIDs = v
}

// GetMintMinAmount returns the MintMinAmount field value
func (o *AmmPoolJoinRequest) GetMintMinAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MintMinAmount
}

// GetMintMinAmountOk returns a tuple with the MintMinAmount field value
// and a boolean to check if the value has been set.
func (o *AmmPoolJoinRequest) GetMintMinAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MintMinAmount, true
}

// SetMintMinAmount sets field value
func (o *AmmPoolJoinRequest) SetMintMinAmount(v string) {
	o.MintMinAmount = v
}

// GetFee returns the Fee field value
func (o *AmmPoolJoinRequest) GetFee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *AmmPoolJoinRequest) GetFeeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *AmmPoolJoinRequest) SetFee(v string) {
	o.Fee = v
}

// GetValidUntil returns the ValidUntil field value
func (o *AmmPoolJoinRequest) GetValidUntil() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *AmmPoolJoinRequest) GetValidUntilOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidUntil, true
}

// SetValidUntil sets field value
func (o *AmmPoolJoinRequest) SetValidUntil(v int32) {
	o.ValidUntil = v
}

// GetEcdsaSig returns the EcdsaSig field value
func (o *AmmPoolJoinRequest) GetEcdsaSig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EcdsaSig
}

// GetEcdsaSigOk returns a tuple with the EcdsaSig field value
// and a boolean to check if the value has been set.
func (o *AmmPoolJoinRequest) GetEcdsaSigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EcdsaSig, true
}

// SetEcdsaSig sets field value
func (o *AmmPoolJoinRequest) SetEcdsaSig(v string) {
	o.EcdsaSig = v
}

// GetEddsaSig returns the EddsaSig field value
func (o *AmmPoolJoinRequest) GetEddsaSig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EddsaSig
}

// GetEddsaSigOk returns a tuple with the EddsaSig field value
// and a boolean to check if the value has been set.
func (o *AmmPoolJoinRequest) GetEddsaSigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EddsaSig, true
}

// SetEddsaSig sets field value
func (o *AmmPoolJoinRequest) SetEddsaSig(v string) {
	o.EddsaSig = v
}

func (o AmmPoolJoinRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["poolAddress"] = o.PoolAddress
	}
	if true {
		toSerialize["joinAmounts"] = o.JoinAmounts
	}
	if true {
		toSerialize["joinStorageIDs"] = o.JoinStorageIDs
	}
	if true {
		toSerialize["mintMinAmount"] = o.MintMinAmount
	}
	if true {
		toSerialize["fee"] = o.Fee
	}
	if true {
		toSerialize["validUntil"] = o.ValidUntil
	}
	if true {
		toSerialize["ecdsaSig"] = o.EcdsaSig
	}
	if true {
		toSerialize["eddsaSig"] = o.EddsaSig
	}
	return json.Marshal(toSerialize)
}

type NullableAmmPoolJoinRequest struct {
	value *AmmPoolJoinRequest
	isSet bool
}

func (v NullableAmmPoolJoinRequest) Get() *AmmPoolJoinRequest {
	return v.value
}

func (v *NullableAmmPoolJoinRequest) Set(val *AmmPoolJoinRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAmmPoolJoinRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAmmPoolJoinRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmmPoolJoinRequest(val *AmmPoolJoinRequest) *NullableAmmPoolJoinRequest {
	return &NullableAmmPoolJoinRequest{value: val, isSet: true}
}

func (v NullableAmmPoolJoinRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmmPoolJoinRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
