/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// SubmitOffChainRequestItem Response detail of submitted off chain requests
type SubmitOffChainRequestItem struct {
	// The order hash identifier set by the user at the time of submission
	Hash string `json:"hash"`
	// Whether the order was successfully submitted or not, please note, user may query after a while to get real process status, as most offchain requests are async processed
	Status string `json:"status"`
	// Idempotent of submit order response, submit same order again when order was UNKNOWN or WAIT_FREEZE_BALANCE in relayer, idempotent will be true
	IsIdempotent bool `json:"isIdempotent"`
	// field.SubmitOffChainResponseItem.accountId
	AccountId int64 `json:"accountId"`
	// field.SubmitOffChainResponseItem.tokenId
	JoinTokensIds []map[string]interface{} `json:"joinTokensIds"`
	// field.SubmitOffChainResponseItem.storageId
	JoinStorageIds []map[string]interface{} `json:"joinStorageIds"`
}

// NewSubmitOffChainRequestItem instantiates a new SubmitOffChainRequestItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitOffChainRequestItem(hash string, status string, isIdempotent bool, accountId int64, joinTokensIds []map[string]interface{}, joinStorageIds []map[string]interface{}) *SubmitOffChainRequestItem {
	this := SubmitOffChainRequestItem{}
	this.Hash = hash
	this.Status = status
	this.IsIdempotent = isIdempotent
	this.AccountId = accountId
	this.JoinTokensIds = joinTokensIds
	this.JoinStorageIds = joinStorageIds
	return &this
}

// NewSubmitOffChainRequestItemWithDefaults instantiates a new SubmitOffChainRequestItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitOffChainRequestItemWithDefaults() *SubmitOffChainRequestItem {
	this := SubmitOffChainRequestItem{}
	return &this
}

// GetHash returns the Hash field value
func (o *SubmitOffChainRequestItem) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainRequestItem) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *SubmitOffChainRequestItem) SetHash(v string) {
	o.Hash = v
}

// GetStatus returns the Status field value
func (o *SubmitOffChainRequestItem) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainRequestItem) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SubmitOffChainRequestItem) SetStatus(v string) {
	o.Status = v
}

// GetIsIdempotent returns the IsIdempotent field value
func (o *SubmitOffChainRequestItem) GetIsIdempotent() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsIdempotent
}

// GetIsIdempotentOk returns a tuple with the IsIdempotent field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainRequestItem) GetIsIdempotentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsIdempotent, true
}

// SetIsIdempotent sets field value
func (o *SubmitOffChainRequestItem) SetIsIdempotent(v bool) {
	o.IsIdempotent = v
}

// GetAccountId returns the AccountId field value
func (o *SubmitOffChainRequestItem) GetAccountId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainRequestItem) GetAccountIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SubmitOffChainRequestItem) SetAccountId(v int64) {
	o.AccountId = v
}

// GetJoinTokensIds returns the JoinTokensIds field value
func (o *SubmitOffChainRequestItem) GetJoinTokensIds() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.JoinTokensIds
}

// GetJoinTokensIdsOk returns a tuple with the JoinTokensIds field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainRequestItem) GetJoinTokensIdsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.JoinTokensIds, true
}

// SetJoinTokensIds sets field value
func (o *SubmitOffChainRequestItem) SetJoinTokensIds(v []map[string]interface{}) {
	o.JoinTokensIds = v
}

// GetJoinStorageIds returns the JoinStorageIds field value
func (o *SubmitOffChainRequestItem) GetJoinStorageIds() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.JoinStorageIds
}

// GetJoinStorageIdsOk returns a tuple with the JoinStorageIds field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainRequestItem) GetJoinStorageIdsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.JoinStorageIds, true
}

// SetJoinStorageIds sets field value
func (o *SubmitOffChainRequestItem) SetJoinStorageIds(v []map[string]interface{}) {
	o.JoinStorageIds = v
}

func (o SubmitOffChainRequestItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hash"] = o.Hash
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["isIdempotent"] = o.IsIdempotent
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["joinTokensIds"] = o.JoinTokensIds
	}
	if true {
		toSerialize["joinStorageIds"] = o.JoinStorageIds
	}
	return json.Marshal(toSerialize)
}

type NullableSubmitOffChainRequestItem struct {
	value *SubmitOffChainRequestItem
	isSet bool
}

func (v NullableSubmitOffChainRequestItem) Get() *SubmitOffChainRequestItem {
	return v.value
}

func (v *NullableSubmitOffChainRequestItem) Set(val *SubmitOffChainRequestItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitOffChainRequestItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitOffChainRequestItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitOffChainRequestItem(val *SubmitOffChainRequestItem) *NullableSubmitOffChainRequestItem {
	return &NullableSubmitOffChainRequestItem{value: val, isSet: true}
}

func (v NullableSubmitOffChainRequestItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitOffChainRequestItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
