/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// SubmitOffChainResponseItem The response of a POST Offchain request
type SubmitOffChainResponseItem struct {
	// The transaction hash
	Hash string `json:"hash"`
	// The transaction status
	Status string `json:"status"`
	// field.SubmitOffChainResponseItem.isIdempotent
	IsIdempotent bool `json:"isIdempotent"`
	// field.SubmitOffChainResponseItem.accountId
	AccountId int64 `json:"accountId"`
	// field.SubmitOffChainResponseItem.tokenId
	TokenId int32 `json:"tokenId"`
	// field.SubmitOffChainResponseItem.storageId
	StorageId int64 `json:"storageId"`
}

// NewSubmitOffChainResponseItem instantiates a new SubmitOffChainResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitOffChainResponseItem(hash string, status string, isIdempotent bool, accountId int64, tokenId int32, storageId int64) *SubmitOffChainResponseItem {
	this := SubmitOffChainResponseItem{}
	this.Hash = hash
	this.Status = status
	this.IsIdempotent = isIdempotent
	this.AccountId = accountId
	this.TokenId = tokenId
	this.StorageId = storageId
	return &this
}

// NewSubmitOffChainResponseItemWithDefaults instantiates a new SubmitOffChainResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitOffChainResponseItemWithDefaults() *SubmitOffChainResponseItem {
	this := SubmitOffChainResponseItem{}
	return &this
}

// GetHash returns the Hash field value
func (o *SubmitOffChainResponseItem) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainResponseItem) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *SubmitOffChainResponseItem) SetHash(v string) {
	o.Hash = v
}

// GetStatus returns the Status field value
func (o *SubmitOffChainResponseItem) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainResponseItem) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SubmitOffChainResponseItem) SetStatus(v string) {
	o.Status = v
}

// GetIsIdempotent returns the IsIdempotent field value
func (o *SubmitOffChainResponseItem) GetIsIdempotent() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsIdempotent
}

// GetIsIdempotentOk returns a tuple with the IsIdempotent field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainResponseItem) GetIsIdempotentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsIdempotent, true
}

// SetIsIdempotent sets field value
func (o *SubmitOffChainResponseItem) SetIsIdempotent(v bool) {
	o.IsIdempotent = v
}

// GetAccountId returns the AccountId field value
func (o *SubmitOffChainResponseItem) GetAccountId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainResponseItem) GetAccountIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SubmitOffChainResponseItem) SetAccountId(v int64) {
	o.AccountId = v
}

// GetTokenId returns the TokenId field value
func (o *SubmitOffChainResponseItem) GetTokenId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainResponseItem) GetTokenIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *SubmitOffChainResponseItem) SetTokenId(v int32) {
	o.TokenId = v
}

// GetStorageId returns the StorageId field value
func (o *SubmitOffChainResponseItem) GetStorageId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StorageId
}

// GetStorageIdOk returns a tuple with the StorageId field value
// and a boolean to check if the value has been set.
func (o *SubmitOffChainResponseItem) GetStorageIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageId, true
}

// SetStorageId sets field value
func (o *SubmitOffChainResponseItem) SetStorageId(v int64) {
	o.StorageId = v
}

func (o SubmitOffChainResponseItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hash"] = o.Hash
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["isIdempotent"] = o.IsIdempotent
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	if true {
		toSerialize["storageId"] = o.StorageId
	}
	return json.Marshal(toSerialize)
}

type NullableSubmitOffChainResponseItem struct {
	value *SubmitOffChainResponseItem
	isSet bool
}

func (v NullableSubmitOffChainResponseItem) Get() *SubmitOffChainResponseItem {
	return v.value
}

func (v *NullableSubmitOffChainResponseItem) Set(val *SubmitOffChainResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitOffChainResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitOffChainResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitOffChainResponseItem(val *SubmitOffChainResponseItem) *NullableSubmitOffChainResponseItem {
	return &NullableSubmitOffChainResponseItem{value: val, isSet: true}
}

func (v NullableSubmitOffChainResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitOffChainResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
