/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// DualAuthTransferRequest model.SubmitDualAuthTransferRequest.description
type DualAuthTransferRequest struct {
	// field.SubmitDualAuthTransferRequest.exchange
	Exchange string `json:"exchange"`
	// field.SubmitDualAuthTransferRequest.payerId
	PayerId int32 `json:"payerId"`
	// field.SubmitDualAuthTransferRequest.payerAddr
	PayerAddr string `json:"payerAddr"`
	// field.SubmitDualAuthTransferRequest.token
	Token int32 `json:"token"`
	// field.SubmitDualAuthTransferRequest.amount
	Amount string `json:"amount"`
	// field.SubmitDualAuthTransferRequest.feeToken
	FeeToken int32 `json:"feeToken"`
	// field.SubmitDualAuthTransferRequest.maxFeeAmount
	MaxFeeAmount string `json:"maxFeeAmount"`
	// field.SubmitDualAuthTransferRequest.storageId
	StorageId int64 `json:"storageId"`
	// field.SubmitDualAuthTransferRequest.validUntil
	ValidUntil int32 `json:"validUntil"`
	// field.SubmitDualAuthTransferRequest.eddsaSig
	EddsaSig string `json:"eddsaSig"`
	// field.SubmitDualAuthTransferRequest.dualAuthKeyX
	DualAuthKeyX string `json:"dualAuthKeyX"`
	// field.SubmitDualAuthTransferRequest.dualAuthKeyY
	DualAuthKeyY string `json:"dualAuthKeyY"`
	// field.SubmitDualAuthTransferRequest.dualEddsaSig
	DualEddsaSig string `json:"dualEddsaSig"`
	// field.SubmitDualAuthTransferRequest.dualPayeeId
	DualPayeeId int64 `json:"dualPayeeId"`
	// field.SubmitDualAuthTransferRequest.dualPayeeAddr
	DualPayeeAddr string `json:"dualPayeeAddr"`
	// field.SubmitDualAuthTransferRequest.memo
	Memo *string `json:"memo,omitempty"`
}

// NewDualAuthTransferRequest instantiates a new DualAuthTransferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDualAuthTransferRequest(exchange string, payerId int32, payerAddr string, token int32, amount string, feeToken int32, maxFeeAmount string, storageId int64, validUntil int32, eddsaSig string, dualAuthKeyX string, dualAuthKeyY string, dualEddsaSig string, dualPayeeId int64, dualPayeeAddr string) *DualAuthTransferRequest {
	this := DualAuthTransferRequest{}
	this.Exchange = exchange
	this.PayerId = payerId
	this.PayerAddr = payerAddr
	this.Token = token
	this.Amount = amount
	this.FeeToken = feeToken
	this.MaxFeeAmount = maxFeeAmount
	this.StorageId = storageId
	this.ValidUntil = validUntil
	this.EddsaSig = eddsaSig
	this.DualAuthKeyX = dualAuthKeyX
	this.DualAuthKeyY = dualAuthKeyY
	this.DualEddsaSig = dualEddsaSig
	this.DualPayeeId = dualPayeeId
	this.DualPayeeAddr = dualPayeeAddr
	return &this
}

// NewDualAuthTransferRequestWithDefaults instantiates a new DualAuthTransferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDualAuthTransferRequestWithDefaults() *DualAuthTransferRequest {
	this := DualAuthTransferRequest{}
	return &this
}

// GetExchange returns the Exchange field value
func (o *DualAuthTransferRequest) GetExchange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetExchangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Exchange, true
}

// SetExchange sets field value
func (o *DualAuthTransferRequest) SetExchange(v string) {
	o.Exchange = v
}

// GetPayerId returns the PayerId field value
func (o *DualAuthTransferRequest) GetPayerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PayerId
}

// GetPayerIdOk returns a tuple with the PayerId field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetPayerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayerId, true
}

// SetPayerId sets field value
func (o *DualAuthTransferRequest) SetPayerId(v int32) {
	o.PayerId = v
}

// GetPayerAddr returns the PayerAddr field value
func (o *DualAuthTransferRequest) GetPayerAddr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayerAddr
}

// GetPayerAddrOk returns a tuple with the PayerAddr field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetPayerAddrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayerAddr, true
}

// SetPayerAddr sets field value
func (o *DualAuthTransferRequest) SetPayerAddr(v string) {
	o.PayerAddr = v
}

// GetToken returns the Token field value
func (o *DualAuthTransferRequest) GetToken() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetTokenOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *DualAuthTransferRequest) SetToken(v int32) {
	o.Token = v
}

// GetAmount returns the Amount field value
func (o *DualAuthTransferRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *DualAuthTransferRequest) SetAmount(v string) {
	o.Amount = v
}

// GetFeeToken returns the FeeToken field value
func (o *DualAuthTransferRequest) GetFeeToken() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FeeToken
}

// GetFeeTokenOk returns a tuple with the FeeToken field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetFeeTokenOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeToken, true
}

// SetFeeToken sets field value
func (o *DualAuthTransferRequest) SetFeeToken(v int32) {
	o.FeeToken = v
}

// GetMaxFeeAmount returns the MaxFeeAmount field value
func (o *DualAuthTransferRequest) GetMaxFeeAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxFeeAmount
}

// GetMaxFeeAmountOk returns a tuple with the MaxFeeAmount field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetMaxFeeAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFeeAmount, true
}

// SetMaxFeeAmount sets field value
func (o *DualAuthTransferRequest) SetMaxFeeAmount(v string) {
	o.MaxFeeAmount = v
}

// GetStorageId returns the StorageId field value
func (o *DualAuthTransferRequest) GetStorageId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StorageId
}

// GetStorageIdOk returns a tuple with the StorageId field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetStorageIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageId, true
}

// SetStorageId sets field value
func (o *DualAuthTransferRequest) SetStorageId(v int64) {
	o.StorageId = v
}

// GetValidUntil returns the ValidUntil field value
func (o *DualAuthTransferRequest) GetValidUntil() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetValidUntilOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidUntil, true
}

// SetValidUntil sets field value
func (o *DualAuthTransferRequest) SetValidUntil(v int32) {
	o.ValidUntil = v
}

// GetEddsaSig returns the EddsaSig field value
func (o *DualAuthTransferRequest) GetEddsaSig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EddsaSig
}

// GetEddsaSigOk returns a tuple with the EddsaSig field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetEddsaSigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EddsaSig, true
}

// SetEddsaSig sets field value
func (o *DualAuthTransferRequest) SetEddsaSig(v string) {
	o.EddsaSig = v
}

// GetDualAuthKeyX returns the DualAuthKeyX field value
func (o *DualAuthTransferRequest) GetDualAuthKeyX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DualAuthKeyX
}

// GetDualAuthKeyXOk returns a tuple with the DualAuthKeyX field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetDualAuthKeyXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DualAuthKeyX, true
}

// SetDualAuthKeyX sets field value
func (o *DualAuthTransferRequest) SetDualAuthKeyX(v string) {
	o.DualAuthKeyX = v
}

// GetDualAuthKeyY returns the DualAuthKeyY field value
func (o *DualAuthTransferRequest) GetDualAuthKeyY() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DualAuthKeyY
}

// GetDualAuthKeyYOk returns a tuple with the DualAuthKeyY field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetDualAuthKeyYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DualAuthKeyY, true
}

// SetDualAuthKeyY sets field value
func (o *DualAuthTransferRequest) SetDualAuthKeyY(v string) {
	o.DualAuthKeyY = v
}

// GetDualEddsaSig returns the DualEddsaSig field value
func (o *DualAuthTransferRequest) GetDualEddsaSig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DualEddsaSig
}

// GetDualEddsaSigOk returns a tuple with the DualEddsaSig field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetDualEddsaSigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DualEddsaSig, true
}

// SetDualEddsaSig sets field value
func (o *DualAuthTransferRequest) SetDualEddsaSig(v string) {
	o.DualEddsaSig = v
}

// GetDualPayeeId returns the DualPayeeId field value
func (o *DualAuthTransferRequest) GetDualPayeeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DualPayeeId
}

// GetDualPayeeIdOk returns a tuple with the DualPayeeId field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetDualPayeeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DualPayeeId, true
}

// SetDualPayeeId sets field value
func (o *DualAuthTransferRequest) SetDualPayeeId(v int64) {
	o.DualPayeeId = v
}

// GetDualPayeeAddr returns the DualPayeeAddr field value
func (o *DualAuthTransferRequest) GetDualPayeeAddr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DualPayeeAddr
}

// GetDualPayeeAddrOk returns a tuple with the DualPayeeAddr field value
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetDualPayeeAddrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DualPayeeAddr, true
}

// SetDualPayeeAddr sets field value
func (o *DualAuthTransferRequest) SetDualPayeeAddr(v string) {
	o.DualPayeeAddr = v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *DualAuthTransferRequest) GetMemo() string {
	if o == nil || o.Memo == nil {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DualAuthTransferRequest) GetMemoOk() (*string, bool) {
	if o == nil || o.Memo == nil {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *DualAuthTransferRequest) HasMemo() bool {
	if o != nil && o.Memo != nil {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *DualAuthTransferRequest) SetMemo(v string) {
	o.Memo = &v
}

func (o DualAuthTransferRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["exchange"] = o.Exchange
	}
	if true {
		toSerialize["payerId"] = o.PayerId
	}
	if true {
		toSerialize["payerAddr"] = o.PayerAddr
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["feeToken"] = o.FeeToken
	}
	if true {
		toSerialize["maxFeeAmount"] = o.MaxFeeAmount
	}
	if true {
		toSerialize["storageId"] = o.StorageId
	}
	if true {
		toSerialize["validUntil"] = o.ValidUntil
	}
	if true {
		toSerialize["eddsaSig"] = o.EddsaSig
	}
	if true {
		toSerialize["dualAuthKeyX"] = o.DualAuthKeyX
	}
	if true {
		toSerialize["dualAuthKeyY"] = o.DualAuthKeyY
	}
	if true {
		toSerialize["dualEddsaSig"] = o.DualEddsaSig
	}
	if true {
		toSerialize["dualPayeeId"] = o.DualPayeeId
	}
	if true {
		toSerialize["dualPayeeAddr"] = o.DualPayeeAddr
	}
	if o.Memo != nil {
		toSerialize["memo"] = o.Memo
	}
	return json.Marshal(toSerialize)
}

type NullableDualAuthTransferRequest struct {
	value *DualAuthTransferRequest
	isSet bool
}

func (v NullableDualAuthTransferRequest) Get() *DualAuthTransferRequest {
	return v.value
}

func (v *NullableDualAuthTransferRequest) Set(val *DualAuthTransferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDualAuthTransferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDualAuthTransferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDualAuthTransferRequest(val *DualAuthTransferRequest) *NullableDualAuthTransferRequest {
	return &NullableDualAuthTransferRequest{value: val, isSet: true}
}

func (v NullableDualAuthTransferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDualAuthTransferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
