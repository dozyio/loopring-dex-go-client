/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// PendingBalance Users pending balances
type PendingBalance struct {
	// Withdrawal pending balance which means the token is in withdrawal state but not arrived L1
	Withdraw string `json:"withdraw"`
	// Deposit pending balance which means the token is in deposit state but not arrived L2
	Deposit string `json:"deposit"`
}

// NewPendingBalance instantiates a new PendingBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPendingBalance(withdraw string, deposit string) *PendingBalance {
	this := PendingBalance{}
	this.Withdraw = withdraw
	this.Deposit = deposit
	return &this
}

// NewPendingBalanceWithDefaults instantiates a new PendingBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPendingBalanceWithDefaults() *PendingBalance {
	this := PendingBalance{}
	return &this
}

// GetWithdraw returns the Withdraw field value
func (o *PendingBalance) GetWithdraw() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Withdraw
}

// GetWithdrawOk returns a tuple with the Withdraw field value
// and a boolean to check if the value has been set.
func (o *PendingBalance) GetWithdrawOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Withdraw, true
}

// SetWithdraw sets field value
func (o *PendingBalance) SetWithdraw(v string) {
	o.Withdraw = v
}

// GetDeposit returns the Deposit field value
func (o *PendingBalance) GetDeposit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Deposit
}

// GetDepositOk returns a tuple with the Deposit field value
// and a boolean to check if the value has been set.
func (o *PendingBalance) GetDepositOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deposit, true
}

// SetDeposit sets field value
func (o *PendingBalance) SetDeposit(v string) {
	o.Deposit = v
}

func (o PendingBalance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["withdraw"] = o.Withdraw
	}
	if true {
		toSerialize["deposit"] = o.Deposit
	}
	return json.Marshal(toSerialize)
}

type NullablePendingBalance struct {
	value *PendingBalance
	isSet bool
}

func (v NullablePendingBalance) Get() *PendingBalance {
	return v.value
}

func (v *NullablePendingBalance) Set(val *PendingBalance) {
	v.value = val
	v.isSet = true
}

func (v NullablePendingBalance) IsSet() bool {
	return v.isSet
}

func (v *NullablePendingBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePendingBalance(val *PendingBalance) *NullablePendingBalance {
	return &NullablePendingBalance{value: val, isSet: true}
}

func (v NullablePendingBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePendingBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
