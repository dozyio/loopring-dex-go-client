/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// NftMetadataBaseInfo struct for NftMetadataBaseInfo
type NftMetadataBaseInfo struct {
	Name         string `json:"name"`
	Decimals     int32  `json:"decimals"`
	Description  string `json:"description"`
	Image        string `json:"image"`
	Properties   string `json:"properties"`
	Localization string `json:"localization"`
}

// NewNftMetadataBaseInfo instantiates a new NftMetadataBaseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNftMetadataBaseInfo(name string, decimals int32, description string, image string, properties string, localization string) *NftMetadataBaseInfo {
	this := NftMetadataBaseInfo{}
	this.Name = name
	this.Decimals = decimals
	this.Description = description
	this.Image = image
	this.Properties = properties
	this.Localization = localization
	return &this
}

// NewNftMetadataBaseInfoWithDefaults instantiates a new NftMetadataBaseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNftMetadataBaseInfoWithDefaults() *NftMetadataBaseInfo {
	this := NftMetadataBaseInfo{}
	return &this
}

// GetName returns the Name field value
func (o *NftMetadataBaseInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NftMetadataBaseInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NftMetadataBaseInfo) SetName(v string) {
	o.Name = v
}

// GetDecimals returns the Decimals field value
func (o *NftMetadataBaseInfo) GetDecimals() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value
// and a boolean to check if the value has been set.
func (o *NftMetadataBaseInfo) GetDecimalsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Decimals, true
}

// SetDecimals sets field value
func (o *NftMetadataBaseInfo) SetDecimals(v int32) {
	o.Decimals = v
}

// GetDescription returns the Description field value
func (o *NftMetadataBaseInfo) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *NftMetadataBaseInfo) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *NftMetadataBaseInfo) SetDescription(v string) {
	o.Description = v
}

// GetImage returns the Image field value
func (o *NftMetadataBaseInfo) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *NftMetadataBaseInfo) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *NftMetadataBaseInfo) SetImage(v string) {
	o.Image = v
}

// GetProperties returns the Properties field value
func (o *NftMetadataBaseInfo) GetProperties() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *NftMetadataBaseInfo) GetPropertiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *NftMetadataBaseInfo) SetProperties(v string) {
	o.Properties = v
}

// GetLocalization returns the Localization field value
func (o *NftMetadataBaseInfo) GetLocalization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Localization
}

// GetLocalizationOk returns a tuple with the Localization field value
// and a boolean to check if the value has been set.
func (o *NftMetadataBaseInfo) GetLocalizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Localization, true
}

// SetLocalization sets field value
func (o *NftMetadataBaseInfo) SetLocalization(v string) {
	o.Localization = v
}

func (o NftMetadataBaseInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["decimals"] = o.Decimals
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["image"] = o.Image
	}
	if true {
		toSerialize["properties"] = o.Properties
	}
	if true {
		toSerialize["localization"] = o.Localization
	}
	return json.Marshal(toSerialize)
}

type NullableNftMetadataBaseInfo struct {
	value *NftMetadataBaseInfo
	isSet bool
}

func (v NullableNftMetadataBaseInfo) Get() *NftMetadataBaseInfo {
	return v.value
}

func (v *NullableNftMetadataBaseInfo) Set(val *NftMetadataBaseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableNftMetadataBaseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableNftMetadataBaseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNftMetadataBaseInfo(val *NftMetadataBaseInfo) *NullableNftMetadataBaseInfo {
	return &NullableNftMetadataBaseInfo{value: val, isSet: true}
}

func (v NullableNftMetadataBaseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNftMetadataBaseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
