/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// GetUserNftDepositResponse model.GetUserNftDepositResponse.description
type GetUserNftDepositResponse struct {
	// field.totalNum.description
	TotalNum int64 `json:"totalNum"`
	// field.GetUserNftDepositResponse.NftDepositData
	Deposits []NftDepositData `json:"deposits"`
}

// NewGetUserNftDepositResponse instantiates a new GetUserNftDepositResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserNftDepositResponse(totalNum int64, deposits []NftDepositData) *GetUserNftDepositResponse {
	this := GetUserNftDepositResponse{}
	this.TotalNum = totalNum
	this.Deposits = deposits
	return &this
}

// NewGetUserNftDepositResponseWithDefaults instantiates a new GetUserNftDepositResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserNftDepositResponseWithDefaults() *GetUserNftDepositResponse {
	this := GetUserNftDepositResponse{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *GetUserNftDepositResponse) GetTotalNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *GetUserNftDepositResponse) GetTotalNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *GetUserNftDepositResponse) SetTotalNum(v int64) {
	o.TotalNum = v
}

// GetDeposits returns the Deposits field value
func (o *GetUserNftDepositResponse) GetDeposits() []NftDepositData {
	if o == nil {
		var ret []NftDepositData
		return ret
	}

	return o.Deposits
}

// GetDepositsOk returns a tuple with the Deposits field value
// and a boolean to check if the value has been set.
func (o *GetUserNftDepositResponse) GetDepositsOk() ([]NftDepositData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Deposits, true
}

// SetDeposits sets field value
func (o *GetUserNftDepositResponse) SetDeposits(v []NftDepositData) {
	o.Deposits = v
}

func (o GetUserNftDepositResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["deposits"] = o.Deposits
	}
	return json.Marshal(toSerialize)
}

type NullableGetUserNftDepositResponse struct {
	value *GetUserNftDepositResponse
	isSet bool
}

func (v NullableGetUserNftDepositResponse) Get() *GetUserNftDepositResponse {
	return v.value
}

func (v *NullableGetUserNftDepositResponse) Set(val *GetUserNftDepositResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserNftDepositResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserNftDepositResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserNftDepositResponse(val *GetUserNftDepositResponse) *NullableGetUserNftDepositResponse {
	return &NullableGetUserNftDepositResponse{value: val, isSet: true}
}

func (v NullableGetUserNftDepositResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserNftDepositResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
