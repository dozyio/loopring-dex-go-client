/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// UserCreateDataList UserCreateDataList
type UserCreateDataList struct {
	// Total number of records found
	TotalNum int64 `json:"totalNum"`
	// List of UserRegistrationRecord
	Transactions []UserAccountTxData `json:"transactions"`
}

// NewUserCreateDataList instantiates a new UserCreateDataList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreateDataList(totalNum int64, transactions []UserAccountTxData) *UserCreateDataList {
	this := UserCreateDataList{}
	this.TotalNum = totalNum
	this.Transactions = transactions
	return &this
}

// NewUserCreateDataListWithDefaults instantiates a new UserCreateDataList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreateDataListWithDefaults() *UserCreateDataList {
	this := UserCreateDataList{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *UserCreateDataList) GetTotalNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *UserCreateDataList) GetTotalNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *UserCreateDataList) SetTotalNum(v int64) {
	o.TotalNum = v
}

// GetTransactions returns the Transactions field value
func (o *UserCreateDataList) GetTransactions() []UserAccountTxData {
	if o == nil {
		var ret []UserAccountTxData
		return ret
	}

	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value
// and a boolean to check if the value has been set.
func (o *UserCreateDataList) GetTransactionsOk() ([]UserAccountTxData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Transactions, true
}

// SetTransactions sets field value
func (o *UserCreateDataList) SetTransactions(v []UserAccountTxData) {
	o.Transactions = v
}

func (o UserCreateDataList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["transactions"] = o.Transactions
	}
	return json.Marshal(toSerialize)
}

type NullableUserCreateDataList struct {
	value *UserCreateDataList
	isSet bool
}

func (v NullableUserCreateDataList) Get() *UserCreateDataList {
	return v.value
}

func (v *NullableUserCreateDataList) Set(val *UserCreateDataList) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreateDataList) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreateDataList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreateDataList(val *UserCreateDataList) *NullableUserCreateDataList {
	return &NullableUserCreateDataList{value: val, isSet: true}
}

func (v NullableUserCreateDataList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreateDataList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
