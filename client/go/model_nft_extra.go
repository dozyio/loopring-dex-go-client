/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// NftExtra struct for NftExtra
type NftExtra struct {
	ImageData       string `json:"imageData"`
	ExternalUrl     string `json:"externalUrl"`
	Attributes      string `json:"attributes"`
	BackgroundColor string `json:"backgroundColor"`
	AnimationUrl    string `json:"animationUrl"`
	YoutubeUrl      string `json:"youtubeUrl"`
	Minter          string `json:"minter"`
}

// NewNftExtra instantiates a new NftExtra object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNftExtra(imageData string, externalUrl string, attributes string, backgroundColor string, animationUrl string, youtubeUrl string, minter string) *NftExtra {
	this := NftExtra{}
	this.ImageData = imageData
	this.ExternalUrl = externalUrl
	this.Attributes = attributes
	this.BackgroundColor = backgroundColor
	this.AnimationUrl = animationUrl
	this.YoutubeUrl = youtubeUrl
	this.Minter = minter
	return &this
}

// NewNftExtraWithDefaults instantiates a new NftExtra object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNftExtraWithDefaults() *NftExtra {
	this := NftExtra{}
	return &this
}

// GetImageData returns the ImageData field value
func (o *NftExtra) GetImageData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageData
}

// GetImageDataOk returns a tuple with the ImageData field value
// and a boolean to check if the value has been set.
func (o *NftExtra) GetImageDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageData, true
}

// SetImageData sets field value
func (o *NftExtra) SetImageData(v string) {
	o.ImageData = v
}

// GetExternalUrl returns the ExternalUrl field value
func (o *NftExtra) GetExternalUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalUrl
}

// GetExternalUrlOk returns a tuple with the ExternalUrl field value
// and a boolean to check if the value has been set.
func (o *NftExtra) GetExternalUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalUrl, true
}

// SetExternalUrl sets field value
func (o *NftExtra) SetExternalUrl(v string) {
	o.ExternalUrl = v
}

// GetAttributes returns the Attributes field value
func (o *NftExtra) GetAttributes() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *NftExtra) GetAttributesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *NftExtra) SetAttributes(v string) {
	o.Attributes = v
}

// GetBackgroundColor returns the BackgroundColor field value
func (o *NftExtra) GetBackgroundColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value
// and a boolean to check if the value has been set.
func (o *NftExtra) GetBackgroundColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackgroundColor, true
}

// SetBackgroundColor sets field value
func (o *NftExtra) SetBackgroundColor(v string) {
	o.BackgroundColor = v
}

// GetAnimationUrl returns the AnimationUrl field value
func (o *NftExtra) GetAnimationUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AnimationUrl
}

// GetAnimationUrlOk returns a tuple with the AnimationUrl field value
// and a boolean to check if the value has been set.
func (o *NftExtra) GetAnimationUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnimationUrl, true
}

// SetAnimationUrl sets field value
func (o *NftExtra) SetAnimationUrl(v string) {
	o.AnimationUrl = v
}

// GetYoutubeUrl returns the YoutubeUrl field value
func (o *NftExtra) GetYoutubeUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.YoutubeUrl
}

// GetYoutubeUrlOk returns a tuple with the YoutubeUrl field value
// and a boolean to check if the value has been set.
func (o *NftExtra) GetYoutubeUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.YoutubeUrl, true
}

// SetYoutubeUrl sets field value
func (o *NftExtra) SetYoutubeUrl(v string) {
	o.YoutubeUrl = v
}

// GetMinter returns the Minter field value
func (o *NftExtra) GetMinter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Minter
}

// GetMinterOk returns a tuple with the Minter field value
// and a boolean to check if the value has been set.
func (o *NftExtra) GetMinterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Minter, true
}

// SetMinter sets field value
func (o *NftExtra) SetMinter(v string) {
	o.Minter = v
}

func (o NftExtra) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["imageData"] = o.ImageData
	}
	if true {
		toSerialize["externalUrl"] = o.ExternalUrl
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	if true {
		toSerialize["backgroundColor"] = o.BackgroundColor
	}
	if true {
		toSerialize["animationUrl"] = o.AnimationUrl
	}
	if true {
		toSerialize["youtubeUrl"] = o.YoutubeUrl
	}
	if true {
		toSerialize["minter"] = o.Minter
	}
	return json.Marshal(toSerialize)
}

type NullableNftExtra struct {
	value *NftExtra
	isSet bool
}

func (v NullableNftExtra) Get() *NftExtra {
	return v.value
}

func (v *NullableNftExtra) Set(val *NftExtra) {
	v.value = val
	v.isSet = true
}

func (v NullableNftExtra) IsSet() bool {
	return v.isSet
}

func (v *NullableNftExtra) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNftExtra(val *NftExtra) *NullableNftExtra {
	return &NullableNftExtra{value: val, isSet: true}
}

func (v NullableNftExtra) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNftExtra) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
