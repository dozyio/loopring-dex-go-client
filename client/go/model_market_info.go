/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// MarketInfo struct for MarketInfo
type MarketInfo struct {
	// Trading pair ID
	Market string `json:"market"`
	// The base token ID
	BaseTokenId int32 `json:"baseTokenId"`
	// The quote token ID
	QuoteTokenId int32 `json:"quoteTokenId"`
	// The precision of price
	PrecisionForPrice int32 `json:"precisionForPrice"`
	// The max level of orderbook price aggregation
	OrderbookAggLevels int32 `json:"orderbookAggLevels"`
	// True if trading is enabled for this trading pair
	Enabled bool `json:"enabled"`
}

// NewMarketInfo instantiates a new MarketInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketInfo(market string, baseTokenId int32, quoteTokenId int32, precisionForPrice int32, orderbookAggLevels int32, enabled bool) *MarketInfo {
	this := MarketInfo{}
	this.Market = market
	this.BaseTokenId = baseTokenId
	this.QuoteTokenId = quoteTokenId
	this.PrecisionForPrice = precisionForPrice
	this.OrderbookAggLevels = orderbookAggLevels
	this.Enabled = enabled
	return &this
}

// NewMarketInfoWithDefaults instantiates a new MarketInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketInfoWithDefaults() *MarketInfo {
	this := MarketInfo{}
	return &this
}

// GetMarket returns the Market field value
func (o *MarketInfo) GetMarket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Market
}

// GetMarketOk returns a tuple with the Market field value
// and a boolean to check if the value has been set.
func (o *MarketInfo) GetMarketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Market, true
}

// SetMarket sets field value
func (o *MarketInfo) SetMarket(v string) {
	o.Market = v
}

// GetBaseTokenId returns the BaseTokenId field value
func (o *MarketInfo) GetBaseTokenId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BaseTokenId
}

// GetBaseTokenIdOk returns a tuple with the BaseTokenId field value
// and a boolean to check if the value has been set.
func (o *MarketInfo) GetBaseTokenIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseTokenId, true
}

// SetBaseTokenId sets field value
func (o *MarketInfo) SetBaseTokenId(v int32) {
	o.BaseTokenId = v
}

// GetQuoteTokenId returns the QuoteTokenId field value
func (o *MarketInfo) GetQuoteTokenId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.QuoteTokenId
}

// GetQuoteTokenIdOk returns a tuple with the QuoteTokenId field value
// and a boolean to check if the value has been set.
func (o *MarketInfo) GetQuoteTokenIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteTokenId, true
}

// SetQuoteTokenId sets field value
func (o *MarketInfo) SetQuoteTokenId(v int32) {
	o.QuoteTokenId = v
}

// GetPrecisionForPrice returns the PrecisionForPrice field value
func (o *MarketInfo) GetPrecisionForPrice() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PrecisionForPrice
}

// GetPrecisionForPriceOk returns a tuple with the PrecisionForPrice field value
// and a boolean to check if the value has been set.
func (o *MarketInfo) GetPrecisionForPriceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrecisionForPrice, true
}

// SetPrecisionForPrice sets field value
func (o *MarketInfo) SetPrecisionForPrice(v int32) {
	o.PrecisionForPrice = v
}

// GetOrderbookAggLevels returns the OrderbookAggLevels field value
func (o *MarketInfo) GetOrderbookAggLevels() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderbookAggLevels
}

// GetOrderbookAggLevelsOk returns a tuple with the OrderbookAggLevels field value
// and a boolean to check if the value has been set.
func (o *MarketInfo) GetOrderbookAggLevelsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderbookAggLevels, true
}

// SetOrderbookAggLevels sets field value
func (o *MarketInfo) SetOrderbookAggLevels(v int32) {
	o.OrderbookAggLevels = v
}

// GetEnabled returns the Enabled field value
func (o *MarketInfo) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *MarketInfo) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *MarketInfo) SetEnabled(v bool) {
	o.Enabled = v
}

func (o MarketInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["market"] = o.Market
	}
	if true {
		toSerialize["baseTokenId"] = o.BaseTokenId
	}
	if true {
		toSerialize["quoteTokenId"] = o.QuoteTokenId
	}
	if true {
		toSerialize["precisionForPrice"] = o.PrecisionForPrice
	}
	if true {
		toSerialize["orderbookAggLevels"] = o.OrderbookAggLevels
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableMarketInfo struct {
	value *MarketInfo
	isSet bool
}

func (v NullableMarketInfo) Get() *MarketInfo {
	return v.value
}

func (v *NullableMarketInfo) Set(val *MarketInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketInfo(val *MarketInfo) *NullableMarketInfo {
	return &NullableMarketInfo{value: val, isSet: true}
}

func (v NullableMarketInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
