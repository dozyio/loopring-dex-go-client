/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// TransferDataList model.TransferDataList.description
type TransferDataList struct {
	// Total number of records found
	TotalNum int64 `json:"totalNum"`
	// User's transfer list
	Transactions []TransferData `json:"transactions"`
}

// NewTransferDataList instantiates a new TransferDataList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferDataList(totalNum int64, transactions []TransferData) *TransferDataList {
	this := TransferDataList{}
	this.TotalNum = totalNum
	this.Transactions = transactions
	return &this
}

// NewTransferDataListWithDefaults instantiates a new TransferDataList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferDataListWithDefaults() *TransferDataList {
	this := TransferDataList{}
	return &this
}

// GetTotalNum returns the TotalNum field value
func (o *TransferDataList) GetTotalNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNum
}

// GetTotalNumOk returns a tuple with the TotalNum field value
// and a boolean to check if the value has been set.
func (o *TransferDataList) GetTotalNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNum, true
}

// SetTotalNum sets field value
func (o *TransferDataList) SetTotalNum(v int64) {
	o.TotalNum = v
}

// GetTransactions returns the Transactions field value
func (o *TransferDataList) GetTransactions() []TransferData {
	if o == nil {
		var ret []TransferData
		return ret
	}

	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value
// and a boolean to check if the value has been set.
func (o *TransferDataList) GetTransactionsOk() ([]TransferData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Transactions, true
}

// SetTransactions sets field value
func (o *TransferDataList) SetTransactions(v []TransferData) {
	o.Transactions = v
}

func (o TransferDataList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalNum"] = o.TotalNum
	}
	if true {
		toSerialize["transactions"] = o.Transactions
	}
	return json.Marshal(toSerialize)
}

type NullableTransferDataList struct {
	value *TransferDataList
	isSet bool
}

func (v NullableTransferDataList) Get() *TransferDataList {
	return v.value
}

func (v *NullableTransferDataList) Set(val *TransferDataList) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferDataList) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferDataList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferDataList(val *TransferDataList) *NullableTransferDataList {
	return &NullableTransferDataList{value: val, isSet: true}
}

func (v NullableTransferDataList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferDataList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
