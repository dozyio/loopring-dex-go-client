/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// AmmPoolBalanceV3 Describes both pooled token balances for a given pool and minted LP tokens amount.
type AmmPoolBalanceV3 struct {
	// field.AmmSnapshot.poolName
	PoolName string `json:"poolName"`
	// field.AmmSnapshot.poolAddress
	PoolAddress string `json:"poolAddress"`
	// AMM in pool tokens balances
	Pooled []TokenVolumeV3 `json:"pooled"`
	Lp     TokenVolumeV3   `json:"lp"`
	// AMM pool risky flag, true if AMM pool TVL is low which means big slippage.
	Risky bool `json:"risky"`
}

// NewAmmPoolBalanceV3 instantiates a new AmmPoolBalanceV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmmPoolBalanceV3(poolName string, poolAddress string, pooled []TokenVolumeV3, lp TokenVolumeV3, risky bool) *AmmPoolBalanceV3 {
	this := AmmPoolBalanceV3{}
	this.PoolName = poolName
	this.PoolAddress = poolAddress
	this.Pooled = pooled
	this.Lp = lp
	this.Risky = risky
	return &this
}

// NewAmmPoolBalanceV3WithDefaults instantiates a new AmmPoolBalanceV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmmPoolBalanceV3WithDefaults() *AmmPoolBalanceV3 {
	this := AmmPoolBalanceV3{}
	return &this
}

// GetPoolName returns the PoolName field value
func (o *AmmPoolBalanceV3) GetPoolName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value
// and a boolean to check if the value has been set.
func (o *AmmPoolBalanceV3) GetPoolNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolName, true
}

// SetPoolName sets field value
func (o *AmmPoolBalanceV3) SetPoolName(v string) {
	o.PoolName = v
}

// GetPoolAddress returns the PoolAddress field value
func (o *AmmPoolBalanceV3) GetPoolAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolAddress
}

// GetPoolAddressOk returns a tuple with the PoolAddress field value
// and a boolean to check if the value has been set.
func (o *AmmPoolBalanceV3) GetPoolAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolAddress, true
}

// SetPoolAddress sets field value
func (o *AmmPoolBalanceV3) SetPoolAddress(v string) {
	o.PoolAddress = v
}

// GetPooled returns the Pooled field value
func (o *AmmPoolBalanceV3) GetPooled() []TokenVolumeV3 {
	if o == nil {
		var ret []TokenVolumeV3
		return ret
	}

	return o.Pooled
}

// GetPooledOk returns a tuple with the Pooled field value
// and a boolean to check if the value has been set.
func (o *AmmPoolBalanceV3) GetPooledOk() ([]TokenVolumeV3, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pooled, true
}

// SetPooled sets field value
func (o *AmmPoolBalanceV3) SetPooled(v []TokenVolumeV3) {
	o.Pooled = v
}

// GetLp returns the Lp field value
func (o *AmmPoolBalanceV3) GetLp() TokenVolumeV3 {
	if o == nil {
		var ret TokenVolumeV3
		return ret
	}

	return o.Lp
}

// GetLpOk returns a tuple with the Lp field value
// and a boolean to check if the value has been set.
func (o *AmmPoolBalanceV3) GetLpOk() (*TokenVolumeV3, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lp, true
}

// SetLp sets field value
func (o *AmmPoolBalanceV3) SetLp(v TokenVolumeV3) {
	o.Lp = v
}

// GetRisky returns the Risky field value
func (o *AmmPoolBalanceV3) GetRisky() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Risky
}

// GetRiskyOk returns a tuple with the Risky field value
// and a boolean to check if the value has been set.
func (o *AmmPoolBalanceV3) GetRiskyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Risky, true
}

// SetRisky sets field value
func (o *AmmPoolBalanceV3) SetRisky(v bool) {
	o.Risky = v
}

func (o AmmPoolBalanceV3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["poolName"] = o.PoolName
	}
	if true {
		toSerialize["poolAddress"] = o.PoolAddress
	}
	if true {
		toSerialize["pooled"] = o.Pooled
	}
	if true {
		toSerialize["lp"] = o.Lp
	}
	if true {
		toSerialize["risky"] = o.Risky
	}
	return json.Marshal(toSerialize)
}

type NullableAmmPoolBalanceV3 struct {
	value *AmmPoolBalanceV3
	isSet bool
}

func (v NullableAmmPoolBalanceV3) Get() *AmmPoolBalanceV3 {
	return v.value
}

func (v *NullableAmmPoolBalanceV3) Set(val *AmmPoolBalanceV3) {
	v.value = val
	v.isSet = true
}

func (v NullableAmmPoolBalanceV3) IsSet() bool {
	return v.isSet
}

func (v *NullableAmmPoolBalanceV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmmPoolBalanceV3(val *AmmPoolBalanceV3) *NullableAmmPoolBalanceV3 {
	return &NullableAmmPoolBalanceV3{value: val, isSet: true}
}

func (v NullableAmmPoolBalanceV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmmPoolBalanceV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
