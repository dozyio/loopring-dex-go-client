/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// FeeTokenAmount The result of query NFT market minimum fee tokens amount
type FeeTokenAmount struct {
	// Fee token symbol
	FeeTokenSymbol string `json:"feeTokenSymbol"`
	// The minimum quote token amount to place a NFT order
	MinAmount string `json:"minAmount"`
	// The base cost of trade settlement
	TradeCost       string         `json:"tradeCost"`
	MarketOrderInfo OrderAmountsV3 `json:"marketOrderInfo"`
}

// NewFeeTokenAmount instantiates a new FeeTokenAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeTokenAmount(feeTokenSymbol string, minAmount string, tradeCost string, marketOrderInfo OrderAmountsV3) *FeeTokenAmount {
	this := FeeTokenAmount{}
	this.FeeTokenSymbol = feeTokenSymbol
	this.MinAmount = minAmount
	this.TradeCost = tradeCost
	this.MarketOrderInfo = marketOrderInfo
	return &this
}

// NewFeeTokenAmountWithDefaults instantiates a new FeeTokenAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeTokenAmountWithDefaults() *FeeTokenAmount {
	this := FeeTokenAmount{}
	return &this
}

// GetFeeTokenSymbol returns the FeeTokenSymbol field value
func (o *FeeTokenAmount) GetFeeTokenSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeeTokenSymbol
}

// GetFeeTokenSymbolOk returns a tuple with the FeeTokenSymbol field value
// and a boolean to check if the value has been set.
func (o *FeeTokenAmount) GetFeeTokenSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeTokenSymbol, true
}

// SetFeeTokenSymbol sets field value
func (o *FeeTokenAmount) SetFeeTokenSymbol(v string) {
	o.FeeTokenSymbol = v
}

// GetMinAmount returns the MinAmount field value
func (o *FeeTokenAmount) GetMinAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinAmount
}

// GetMinAmountOk returns a tuple with the MinAmount field value
// and a boolean to check if the value has been set.
func (o *FeeTokenAmount) GetMinAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinAmount, true
}

// SetMinAmount sets field value
func (o *FeeTokenAmount) SetMinAmount(v string) {
	o.MinAmount = v
}

// GetTradeCost returns the TradeCost field value
func (o *FeeTokenAmount) GetTradeCost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TradeCost
}

// GetTradeCostOk returns a tuple with the TradeCost field value
// and a boolean to check if the value has been set.
func (o *FeeTokenAmount) GetTradeCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TradeCost, true
}

// SetTradeCost sets field value
func (o *FeeTokenAmount) SetTradeCost(v string) {
	o.TradeCost = v
}

// GetMarketOrderInfo returns the MarketOrderInfo field value
func (o *FeeTokenAmount) GetMarketOrderInfo() OrderAmountsV3 {
	if o == nil {
		var ret OrderAmountsV3
		return ret
	}

	return o.MarketOrderInfo
}

// GetMarketOrderInfoOk returns a tuple with the MarketOrderInfo field value
// and a boolean to check if the value has been set.
func (o *FeeTokenAmount) GetMarketOrderInfoOk() (*OrderAmountsV3, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketOrderInfo, true
}

// SetMarketOrderInfo sets field value
func (o *FeeTokenAmount) SetMarketOrderInfo(v OrderAmountsV3) {
	o.MarketOrderInfo = v
}

func (o FeeTokenAmount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["feeTokenSymbol"] = o.FeeTokenSymbol
	}
	if true {
		toSerialize["minAmount"] = o.MinAmount
	}
	if true {
		toSerialize["tradeCost"] = o.TradeCost
	}
	if true {
		toSerialize["marketOrderInfo"] = o.MarketOrderInfo
	}
	return json.Marshal(toSerialize)
}

type NullableFeeTokenAmount struct {
	value *FeeTokenAmount
	isSet bool
}

func (v NullableFeeTokenAmount) Get() *FeeTokenAmount {
	return v.value
}

func (v *NullableFeeTokenAmount) Set(val *FeeTokenAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeTokenAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeTokenAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeTokenAmount(val *FeeTokenAmount) *NullableFeeTokenAmount {
	return &NullableFeeTokenAmount{value: val, isSet: true}
}

func (v NullableFeeTokenAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeTokenAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
