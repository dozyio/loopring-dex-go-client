/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// LuckyTokenAgent model.luckyTokenAgent
type LuckyTokenAgent struct {
	// field.luckyTokenAgent.owner
	Owner string `json:"owner"`
	// field.luckyTokenAgent.infos
	Infos []string `json:"infos"`
}

// NewLuckyTokenAgent instantiates a new LuckyTokenAgent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLuckyTokenAgent(owner string, infos []string) *LuckyTokenAgent {
	this := LuckyTokenAgent{}
	this.Owner = owner
	this.Infos = infos
	return &this
}

// NewLuckyTokenAgentWithDefaults instantiates a new LuckyTokenAgent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLuckyTokenAgentWithDefaults() *LuckyTokenAgent {
	this := LuckyTokenAgent{}
	return &this
}

// GetOwner returns the Owner field value
func (o *LuckyTokenAgent) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *LuckyTokenAgent) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *LuckyTokenAgent) SetOwner(v string) {
	o.Owner = v
}

// GetInfos returns the Infos field value
func (o *LuckyTokenAgent) GetInfos() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Infos
}

// GetInfosOk returns a tuple with the Infos field value
// and a boolean to check if the value has been set.
func (o *LuckyTokenAgent) GetInfosOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Infos, true
}

// SetInfos sets field value
func (o *LuckyTokenAgent) SetInfos(v []string) {
	o.Infos = v
}

func (o LuckyTokenAgent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["infos"] = o.Infos
	}
	return json.Marshal(toSerialize)
}

type NullableLuckyTokenAgent struct {
	value *LuckyTokenAgent
	isSet bool
}

func (v NullableLuckyTokenAgent) Get() *LuckyTokenAgent {
	return v.value
}

func (v *NullableLuckyTokenAgent) Set(val *LuckyTokenAgent) {
	v.value = val
	v.isSet = true
}

func (v NullableLuckyTokenAgent) IsSet() bool {
	return v.isSet
}

func (v *NullableLuckyTokenAgent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLuckyTokenAgent(val *LuckyTokenAgent) *NullableLuckyTokenAgent {
	return &NullableLuckyTokenAgent{value: val, isSet: true}
}

func (v NullableLuckyTokenAgent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLuckyTokenAgent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
