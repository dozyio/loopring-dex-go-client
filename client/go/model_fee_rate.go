/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// FeeRate The data structure of user query market fee rate
type FeeRate struct {
	// Market
	Symbol string `json:"symbol"`
	// Maker rate
	MakerRate int32 `json:"makerRate"`
	// Taker rate
	TakerRate int32 `json:"takerRate"`
}

// NewFeeRate instantiates a new FeeRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeRate(symbol string, makerRate int32, takerRate int32) *FeeRate {
	this := FeeRate{}
	this.Symbol = symbol
	this.MakerRate = makerRate
	this.TakerRate = takerRate
	return &this
}

// NewFeeRateWithDefaults instantiates a new FeeRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeRateWithDefaults() *FeeRate {
	this := FeeRate{}
	return &this
}

// GetSymbol returns the Symbol field value
func (o *FeeRate) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *FeeRate) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *FeeRate) SetSymbol(v string) {
	o.Symbol = v
}

// GetMakerRate returns the MakerRate field value
func (o *FeeRate) GetMakerRate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MakerRate
}

// GetMakerRateOk returns a tuple with the MakerRate field value
// and a boolean to check if the value has been set.
func (o *FeeRate) GetMakerRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MakerRate, true
}

// SetMakerRate sets field value
func (o *FeeRate) SetMakerRate(v int32) {
	o.MakerRate = v
}

// GetTakerRate returns the TakerRate field value
func (o *FeeRate) GetTakerRate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TakerRate
}

// GetTakerRateOk returns a tuple with the TakerRate field value
// and a boolean to check if the value has been set.
func (o *FeeRate) GetTakerRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TakerRate, true
}

// SetTakerRate sets field value
func (o *FeeRate) SetTakerRate(v int32) {
	o.TakerRate = v
}

func (o FeeRate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["symbol"] = o.Symbol
	}
	if true {
		toSerialize["makerRate"] = o.MakerRate
	}
	if true {
		toSerialize["takerRate"] = o.TakerRate
	}
	return json.Marshal(toSerialize)
}

type NullableFeeRate struct {
	value *FeeRate
	isSet bool
}

func (v NullableFeeRate) Get() *FeeRate {
	return v.value
}

func (v *NullableFeeRate) Set(val *FeeRate) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeRate) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeRate(val *FeeRate) *NullableFeeRate {
	return &NullableFeeRate{value: val, isSet: true}
}

func (v NullableFeeRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
