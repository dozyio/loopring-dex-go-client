/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// UpdateAccountRequest model.UpdateAccountRequest.description
type UpdateAccountRequest struct {
	// field.UpdateAccountRequest.exchange
	Exchange string `json:"exchange"`
	// field.UpdateAccountRequest.owner
	Owner string `json:"owner"`
	// field.UpdateAccountRequest.accountId
	AccountId int64 `json:"accountId"`
	// field.UpdateAccountRequest.validUntil
	ValidUntil int32 `json:"validUntil"`
	// field.UpdateAccountRequest.nonce
	Nonce int32 `json:"nonce"`
	// field.UpdateAccountRequest.publicKeyX
	PublicKeyX string `json:"publicKeyX"`
	// field.UpdateAccountRequest.publicKeyY
	PublicKeyY string `json:"publicKeyY"`
	// field.UpdateAccountRequest.feeTokenId
	FeeToken int32 `json:"feeToken"`
	// field.UpdateAccountRequest.maxFee
	MaxFeeAmount       string              `json:"maxFeeAmount"`
	CounterFactualInfo *CounterFactualInfo `json:"counterFactualInfo,omitempty"`
	// field.UpdateAccountRequest.eddsaSig
	EddsaSig *string `json:"eddsaSig,omitempty"`
	// field.UpdateAccountRequest.ecdsaSig
	EcdsaSig *string `json:"ecdsaSig,omitempty"`
}

// NewUpdateAccountRequest instantiates a new UpdateAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccountRequest(exchange string, owner string, accountId int64, validUntil int32, nonce int32, publicKeyX string, publicKeyY string, feeToken int32, maxFeeAmount string) *UpdateAccountRequest {
	this := UpdateAccountRequest{}
	this.Exchange = exchange
	this.Owner = owner
	this.AccountId = accountId
	this.ValidUntil = validUntil
	this.Nonce = nonce
	this.PublicKeyX = publicKeyX
	this.PublicKeyY = publicKeyY
	this.FeeToken = feeToken
	this.MaxFeeAmount = maxFeeAmount
	return &this
}

// NewUpdateAccountRequestWithDefaults instantiates a new UpdateAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccountRequestWithDefaults() *UpdateAccountRequest {
	this := UpdateAccountRequest{}
	return &this
}

// GetExchange returns the Exchange field value
func (o *UpdateAccountRequest) GetExchange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetExchangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Exchange, true
}

// SetExchange sets field value
func (o *UpdateAccountRequest) SetExchange(v string) {
	o.Exchange = v
}

// GetOwner returns the Owner field value
func (o *UpdateAccountRequest) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *UpdateAccountRequest) SetOwner(v string) {
	o.Owner = v
}

// GetAccountId returns the AccountId field value
func (o *UpdateAccountRequest) GetAccountId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetAccountIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *UpdateAccountRequest) SetAccountId(v int64) {
	o.AccountId = v
}

// GetValidUntil returns the ValidUntil field value
func (o *UpdateAccountRequest) GetValidUntil() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetValidUntilOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidUntil, true
}

// SetValidUntil sets field value
func (o *UpdateAccountRequest) SetValidUntil(v int32) {
	o.ValidUntil = v
}

// GetNonce returns the Nonce field value
func (o *UpdateAccountRequest) GetNonce() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetNonceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *UpdateAccountRequest) SetNonce(v int32) {
	o.Nonce = v
}

// GetPublicKeyX returns the PublicKeyX field value
func (o *UpdateAccountRequest) GetPublicKeyX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKeyX
}

// GetPublicKeyXOk returns a tuple with the PublicKeyX field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetPublicKeyXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKeyX, true
}

// SetPublicKeyX sets field value
func (o *UpdateAccountRequest) SetPublicKeyX(v string) {
	o.PublicKeyX = v
}

// GetPublicKeyY returns the PublicKeyY field value
func (o *UpdateAccountRequest) GetPublicKeyY() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKeyY
}

// GetPublicKeyYOk returns a tuple with the PublicKeyY field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetPublicKeyYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKeyY, true
}

// SetPublicKeyY sets field value
func (o *UpdateAccountRequest) SetPublicKeyY(v string) {
	o.PublicKeyY = v
}

// GetFeeToken returns the FeeToken field value
func (o *UpdateAccountRequest) GetFeeToken() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FeeToken
}

// GetFeeTokenOk returns a tuple with the FeeToken field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetFeeTokenOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeToken, true
}

// SetFeeToken sets field value
func (o *UpdateAccountRequest) SetFeeToken(v int32) {
	o.FeeToken = v
}

// GetMaxFeeAmount returns the MaxFeeAmount field value
func (o *UpdateAccountRequest) GetMaxFeeAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxFeeAmount
}

// GetMaxFeeAmountOk returns a tuple with the MaxFeeAmount field value
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetMaxFeeAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFeeAmount, true
}

// SetMaxFeeAmount sets field value
func (o *UpdateAccountRequest) SetMaxFeeAmount(v string) {
	o.MaxFeeAmount = v
}

// GetCounterFactualInfo returns the CounterFactualInfo field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetCounterFactualInfo() CounterFactualInfo {
	if o == nil || o.CounterFactualInfo == nil {
		var ret CounterFactualInfo
		return ret
	}
	return *o.CounterFactualInfo
}

// GetCounterFactualInfoOk returns a tuple with the CounterFactualInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetCounterFactualInfoOk() (*CounterFactualInfo, bool) {
	if o == nil || o.CounterFactualInfo == nil {
		return nil, false
	}
	return o.CounterFactualInfo, true
}

// HasCounterFactualInfo returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasCounterFactualInfo() bool {
	if o != nil && o.CounterFactualInfo != nil {
		return true
	}

	return false
}

// SetCounterFactualInfo gets a reference to the given CounterFactualInfo and assigns it to the CounterFactualInfo field.
func (o *UpdateAccountRequest) SetCounterFactualInfo(v CounterFactualInfo) {
	o.CounterFactualInfo = &v
}

// GetEddsaSig returns the EddsaSig field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetEddsaSig() string {
	if o == nil || o.EddsaSig == nil {
		var ret string
		return ret
	}
	return *o.EddsaSig
}

// GetEddsaSigOk returns a tuple with the EddsaSig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetEddsaSigOk() (*string, bool) {
	if o == nil || o.EddsaSig == nil {
		return nil, false
	}
	return o.EddsaSig, true
}

// HasEddsaSig returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasEddsaSig() bool {
	if o != nil && o.EddsaSig != nil {
		return true
	}

	return false
}

// SetEddsaSig gets a reference to the given string and assigns it to the EddsaSig field.
func (o *UpdateAccountRequest) SetEddsaSig(v string) {
	o.EddsaSig = &v
}

// GetEcdsaSig returns the EcdsaSig field value if set, zero value otherwise.
func (o *UpdateAccountRequest) GetEcdsaSig() string {
	if o == nil || o.EcdsaSig == nil {
		var ret string
		return ret
	}
	return *o.EcdsaSig
}

// GetEcdsaSigOk returns a tuple with the EcdsaSig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountRequest) GetEcdsaSigOk() (*string, bool) {
	if o == nil || o.EcdsaSig == nil {
		return nil, false
	}
	return o.EcdsaSig, true
}

// HasEcdsaSig returns a boolean if a field has been set.
func (o *UpdateAccountRequest) HasEcdsaSig() bool {
	if o != nil && o.EcdsaSig != nil {
		return true
	}

	return false
}

// SetEcdsaSig gets a reference to the given string and assigns it to the EcdsaSig field.
func (o *UpdateAccountRequest) SetEcdsaSig(v string) {
	o.EcdsaSig = &v
}

func (o UpdateAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["exchange"] = o.Exchange
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["validUntil"] = o.ValidUntil
	}
	if true {
		toSerialize["nonce"] = o.Nonce
	}
	if true {
		toSerialize["publicKeyX"] = o.PublicKeyX
	}
	if true {
		toSerialize["publicKeyY"] = o.PublicKeyY
	}
	if true {
		toSerialize["feeToken"] = o.FeeToken
	}
	if true {
		toSerialize["maxFeeAmount"] = o.MaxFeeAmount
	}
	if o.CounterFactualInfo != nil {
		toSerialize["counterFactualInfo"] = o.CounterFactualInfo
	}
	if o.EddsaSig != nil {
		toSerialize["eddsaSig"] = o.EddsaSig
	}
	if o.EcdsaSig != nil {
		toSerialize["ecdsaSig"] = o.EcdsaSig
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAccountRequest struct {
	value *UpdateAccountRequest
	isSet bool
}

func (v NullableUpdateAccountRequest) Get() *UpdateAccountRequest {
	return v.value
}

func (v *NullableUpdateAccountRequest) Set(val *UpdateAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccountRequest(val *UpdateAccountRequest) *NullableUpdateAccountRequest {
	return &NullableUpdateAccountRequest{value: val, isSet: true}
}

func (v NullableUpdateAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
