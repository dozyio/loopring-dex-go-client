/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// PublicKey Describes the users public key which is a point of the selected eclipse curve.
type PublicKey struct {
	// The public keys x part.
	X string `json:"x"`
	// The public keys y part.
	Y string `json:"y"`
}

// NewPublicKey instantiates a new PublicKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicKey(x string, y string) *PublicKey {
	this := PublicKey{}
	this.X = x
	this.Y = y
	return &this
}

// NewPublicKeyWithDefaults instantiates a new PublicKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicKeyWithDefaults() *PublicKey {
	this := PublicKey{}
	return &this
}

// GetX returns the X field value
func (o *PublicKey) GetX() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.X
}

// GetXOk returns a tuple with the X field value
// and a boolean to check if the value has been set.
func (o *PublicKey) GetXOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.X, true
}

// SetX sets field value
func (o *PublicKey) SetX(v string) {
	o.X = v
}

// GetY returns the Y field value
func (o *PublicKey) GetY() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Y
}

// GetYOk returns a tuple with the Y field value
// and a boolean to check if the value has been set.
func (o *PublicKey) GetYOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Y, true
}

// SetY sets field value
func (o *PublicKey) SetY(v string) {
	o.Y = v
}

func (o PublicKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["x"] = o.X
	}
	if true {
		toSerialize["y"] = o.Y
	}
	return json.Marshal(toSerialize)
}

type NullablePublicKey struct {
	value *PublicKey
	isSet bool
}

func (v NullablePublicKey) Get() *PublicKey {
	return v.value
}

func (v *NullablePublicKey) Set(val *PublicKey) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicKey) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicKey(val *PublicKey) *NullablePublicKey {
	return &NullablePublicKey{value: val, isSet: true}
}

func (v NullablePublicKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
