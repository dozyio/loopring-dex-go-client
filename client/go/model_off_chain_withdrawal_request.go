/*
LightCone 2.0 API Documentation

LightCone DEX function interpretation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package loopring

import (
	"encoding/json"
)

// OffChainWithdrawalRequest struct for OffChainWithdrawalRequest
type OffChainWithdrawalRequest struct {
	// exchange address
	Exchange string `json:"exchange"`
	// account id in exchange
	AccountId int64 `json:"accountId"`
	// owner of accountId in exchange
	Owner string `json:"owner"`
	// withdraw token id
	Token int32 `json:"token"`
	// withdraw amount of token, decimal string in WEI
	Amount string `json:"amount"`
	// fee token id in exchange
	FeeToken int32 `json:"feeToken"`
	// fee amount of token, decimal string in WEI
	MaxFeeAmount string `json:"maxFeeAmount"`
	// dex offchain request storageID of the account
	StorageId int64 `json:"storageId"`
	// valid until
	ValidUntil int32 `json:"validUntil"`
	// min gas
	MinGas int32 `json:"minGas"`
	// to address
	To string `json:"to"`
	// extra data
	ExtraData *string `json:"extraData,omitempty"`
	// fastWithdrawal mode
	FastWithdrawalMode *bool               `json:"fastWithdrawalMode,omitempty"`
	CounterFactualInfo *CounterFactualInfo `json:"counterFactualInfo,omitempty"`
	// eddsaSig of this request, hex string
	EddsaSig *string `json:"eddsaSig,omitempty"`
	// trading ecdsa_sig signature of this order, decimal string
	EcdsaSig *string `json:"ecdsaSig,omitempty"`
}

// NewOffChainWithdrawalRequest instantiates a new OffChainWithdrawalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOffChainWithdrawalRequest(exchange string, accountId int64, owner string, token int32, amount string, feeToken int32, maxFeeAmount string, storageId int64, validUntil int32, minGas int32, to string) *OffChainWithdrawalRequest {
	this := OffChainWithdrawalRequest{}
	this.Exchange = exchange
	this.AccountId = accountId
	this.Owner = owner
	this.Token = token
	this.Amount = amount
	this.FeeToken = feeToken
	this.MaxFeeAmount = maxFeeAmount
	this.StorageId = storageId
	this.ValidUntil = validUntil
	this.MinGas = minGas
	this.To = to
	return &this
}

// NewOffChainWithdrawalRequestWithDefaults instantiates a new OffChainWithdrawalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOffChainWithdrawalRequestWithDefaults() *OffChainWithdrawalRequest {
	this := OffChainWithdrawalRequest{}
	return &this
}

// GetExchange returns the Exchange field value
func (o *OffChainWithdrawalRequest) GetExchange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetExchangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Exchange, true
}

// SetExchange sets field value
func (o *OffChainWithdrawalRequest) SetExchange(v string) {
	o.Exchange = v
}

// GetAccountId returns the AccountId field value
func (o *OffChainWithdrawalRequest) GetAccountId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetAccountIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *OffChainWithdrawalRequest) SetAccountId(v int64) {
	o.AccountId = v
}

// GetOwner returns the Owner field value
func (o *OffChainWithdrawalRequest) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *OffChainWithdrawalRequest) SetOwner(v string) {
	o.Owner = v
}

// GetToken returns the Token field value
func (o *OffChainWithdrawalRequest) GetToken() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetTokenOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *OffChainWithdrawalRequest) SetToken(v int32) {
	o.Token = v
}

// GetAmount returns the Amount field value
func (o *OffChainWithdrawalRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *OffChainWithdrawalRequest) SetAmount(v string) {
	o.Amount = v
}

// GetFeeToken returns the FeeToken field value
func (o *OffChainWithdrawalRequest) GetFeeToken() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FeeToken
}

// GetFeeTokenOk returns a tuple with the FeeToken field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetFeeTokenOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeToken, true
}

// SetFeeToken sets field value
func (o *OffChainWithdrawalRequest) SetFeeToken(v int32) {
	o.FeeToken = v
}

// GetMaxFeeAmount returns the MaxFeeAmount field value
func (o *OffChainWithdrawalRequest) GetMaxFeeAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxFeeAmount
}

// GetMaxFeeAmountOk returns a tuple with the MaxFeeAmount field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetMaxFeeAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFeeAmount, true
}

// SetMaxFeeAmount sets field value
func (o *OffChainWithdrawalRequest) SetMaxFeeAmount(v string) {
	o.MaxFeeAmount = v
}

// GetStorageId returns the StorageId field value
func (o *OffChainWithdrawalRequest) GetStorageId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StorageId
}

// GetStorageIdOk returns a tuple with the StorageId field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetStorageIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageId, true
}

// SetStorageId sets field value
func (o *OffChainWithdrawalRequest) SetStorageId(v int64) {
	o.StorageId = v
}

// GetValidUntil returns the ValidUntil field value
func (o *OffChainWithdrawalRequest) GetValidUntil() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetValidUntilOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidUntil, true
}

// SetValidUntil sets field value
func (o *OffChainWithdrawalRequest) SetValidUntil(v int32) {
	o.ValidUntil = v
}

// GetMinGas returns the MinGas field value
func (o *OffChainWithdrawalRequest) GetMinGas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinGas
}

// GetMinGasOk returns a tuple with the MinGas field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetMinGasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinGas, true
}

// SetMinGas sets field value
func (o *OffChainWithdrawalRequest) SetMinGas(v int32) {
	o.MinGas = v
}

// GetTo returns the To field value
func (o *OffChainWithdrawalRequest) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *OffChainWithdrawalRequest) SetTo(v string) {
	o.To = v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise.
func (o *OffChainWithdrawalRequest) GetExtraData() string {
	if o == nil || o.ExtraData == nil {
		var ret string
		return ret
	}
	return *o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetExtraDataOk() (*string, bool) {
	if o == nil || o.ExtraData == nil {
		return nil, false
	}
	return o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *OffChainWithdrawalRequest) HasExtraData() bool {
	if o != nil && o.ExtraData != nil {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given string and assigns it to the ExtraData field.
func (o *OffChainWithdrawalRequest) SetExtraData(v string) {
	o.ExtraData = &v
}

// GetFastWithdrawalMode returns the FastWithdrawalMode field value if set, zero value otherwise.
func (o *OffChainWithdrawalRequest) GetFastWithdrawalMode() bool {
	if o == nil || o.FastWithdrawalMode == nil {
		var ret bool
		return ret
	}
	return *o.FastWithdrawalMode
}

// GetFastWithdrawalModeOk returns a tuple with the FastWithdrawalMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetFastWithdrawalModeOk() (*bool, bool) {
	if o == nil || o.FastWithdrawalMode == nil {
		return nil, false
	}
	return o.FastWithdrawalMode, true
}

// HasFastWithdrawalMode returns a boolean if a field has been set.
func (o *OffChainWithdrawalRequest) HasFastWithdrawalMode() bool {
	if o != nil && o.FastWithdrawalMode != nil {
		return true
	}

	return false
}

// SetFastWithdrawalMode gets a reference to the given bool and assigns it to the FastWithdrawalMode field.
func (o *OffChainWithdrawalRequest) SetFastWithdrawalMode(v bool) {
	o.FastWithdrawalMode = &v
}

// GetCounterFactualInfo returns the CounterFactualInfo field value if set, zero value otherwise.
func (o *OffChainWithdrawalRequest) GetCounterFactualInfo() CounterFactualInfo {
	if o == nil || o.CounterFactualInfo == nil {
		var ret CounterFactualInfo
		return ret
	}
	return *o.CounterFactualInfo
}

// GetCounterFactualInfoOk returns a tuple with the CounterFactualInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetCounterFactualInfoOk() (*CounterFactualInfo, bool) {
	if o == nil || o.CounterFactualInfo == nil {
		return nil, false
	}
	return o.CounterFactualInfo, true
}

// HasCounterFactualInfo returns a boolean if a field has been set.
func (o *OffChainWithdrawalRequest) HasCounterFactualInfo() bool {
	if o != nil && o.CounterFactualInfo != nil {
		return true
	}

	return false
}

// SetCounterFactualInfo gets a reference to the given CounterFactualInfo and assigns it to the CounterFactualInfo field.
func (o *OffChainWithdrawalRequest) SetCounterFactualInfo(v CounterFactualInfo) {
	o.CounterFactualInfo = &v
}

// GetEddsaSig returns the EddsaSig field value if set, zero value otherwise.
func (o *OffChainWithdrawalRequest) GetEddsaSig() string {
	if o == nil || o.EddsaSig == nil {
		var ret string
		return ret
	}
	return *o.EddsaSig
}

// GetEddsaSigOk returns a tuple with the EddsaSig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetEddsaSigOk() (*string, bool) {
	if o == nil || o.EddsaSig == nil {
		return nil, false
	}
	return o.EddsaSig, true
}

// HasEddsaSig returns a boolean if a field has been set.
func (o *OffChainWithdrawalRequest) HasEddsaSig() bool {
	if o != nil && o.EddsaSig != nil {
		return true
	}

	return false
}

// SetEddsaSig gets a reference to the given string and assigns it to the EddsaSig field.
func (o *OffChainWithdrawalRequest) SetEddsaSig(v string) {
	o.EddsaSig = &v
}

// GetEcdsaSig returns the EcdsaSig field value if set, zero value otherwise.
func (o *OffChainWithdrawalRequest) GetEcdsaSig() string {
	if o == nil || o.EcdsaSig == nil {
		var ret string
		return ret
	}
	return *o.EcdsaSig
}

// GetEcdsaSigOk returns a tuple with the EcdsaSig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OffChainWithdrawalRequest) GetEcdsaSigOk() (*string, bool) {
	if o == nil || o.EcdsaSig == nil {
		return nil, false
	}
	return o.EcdsaSig, true
}

// HasEcdsaSig returns a boolean if a field has been set.
func (o *OffChainWithdrawalRequest) HasEcdsaSig() bool {
	if o != nil && o.EcdsaSig != nil {
		return true
	}

	return false
}

// SetEcdsaSig gets a reference to the given string and assigns it to the EcdsaSig field.
func (o *OffChainWithdrawalRequest) SetEcdsaSig(v string) {
	o.EcdsaSig = &v
}

func (o OffChainWithdrawalRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["exchange"] = o.Exchange
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["feeToken"] = o.FeeToken
	}
	if true {
		toSerialize["maxFeeAmount"] = o.MaxFeeAmount
	}
	if true {
		toSerialize["storageId"] = o.StorageId
	}
	if true {
		toSerialize["validUntil"] = o.ValidUntil
	}
	if true {
		toSerialize["minGas"] = o.MinGas
	}
	if true {
		toSerialize["to"] = o.To
	}
	if o.ExtraData != nil {
		toSerialize["extraData"] = o.ExtraData
	}
	if o.FastWithdrawalMode != nil {
		toSerialize["fastWithdrawalMode"] = o.FastWithdrawalMode
	}
	if o.CounterFactualInfo != nil {
		toSerialize["counterFactualInfo"] = o.CounterFactualInfo
	}
	if o.EddsaSig != nil {
		toSerialize["eddsaSig"] = o.EddsaSig
	}
	if o.EcdsaSig != nil {
		toSerialize["ecdsaSig"] = o.EcdsaSig
	}
	return json.Marshal(toSerialize)
}

type NullableOffChainWithdrawalRequest struct {
	value *OffChainWithdrawalRequest
	isSet bool
}

func (v NullableOffChainWithdrawalRequest) Get() *OffChainWithdrawalRequest {
	return v.value
}

func (v *NullableOffChainWithdrawalRequest) Set(val *OffChainWithdrawalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOffChainWithdrawalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOffChainWithdrawalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOffChainWithdrawalRequest(val *OffChainWithdrawalRequest) *NullableOffChainWithdrawalRequest {
	return &NullableOffChainWithdrawalRequest{value: val, isSet: true}
}

func (v NullableOffChainWithdrawalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOffChainWithdrawalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
